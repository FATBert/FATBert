80<CODESPLIT>false<CODESPLIT>VisitableFile<CODESPLIT>visitable file<CODESPLIT>visitable file<CODESPLIT>/** * Class adding the support of the Visitor design pattern to files. * * @author Cedric Bosdonnat * * @see IVisitor for details on implementing a visitor * @see IVisitable for details on how to runs */<CODESPLIT>class adding support visitor design pattern files  author cedric bosdonnat  see ivisitor details implementing a visitor  see ivisitable details runs<CODESPLIT>serialVersionUID = 1447247005481569493L; <CODESPLIT> vazio serialversionuid   <CODESPLIT> vazio serialversionuid<CODESPLIT><VAZIO>[ accept ]<CODESPLIT><vazio>[ accept ] <CODESPLIT><vazio>[ accept <CODESPLIT>[/** * {@inheritDoc} */] <CODESPLIT>  inheritdoc  <CODESPLIT>81<CODESPLIT>false<CODESPLIT>VisitMap<CODESPLIT>visit map<CODESPLIT>visit map<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>heatPalette; cells; width; field; agent; lastPosition = null; neighborhoodSize; <CODESPLIT> vazio heatpalette  cells  width  field  agent lastposition  neighborhoodsize   <CODESPLIT> vazio heatpalette  cells  width  field  agent lastposition  neighborhoodsize<CODESPLIT><VAZIO>[ getHeatColor ][ getHeight ][ getWidth ][ clear ][ setFromHistory ][ getColor ][ getBaseTile ][ getBodyColor ][ getBodyOffsetX ][ getBodyOffsetY ][ getBodyTile ][ message ][ position ][ markNeighborhood ][ step ][ getAgent ]<CODESPLIT><vazio>[ get heat color ][ get height ][ get width ][ clear ][ set from history ][ get color ][ get base tile ][ get body color ][ get body offset x ][ get body offset y ][ get body tile ][ message ][ position ][ mark neighborhood ][ step ][ get agent ] <CODESPLIT><vazio>[ heat color height width clear set history color base tile body color body offset body offset body tile message position mark neighborhood step agent <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>82<CODESPLIT>false<CODESPLIT>Visual_Scene_sketchup7<CODESPLIT>visual_scene_sketchup7<CODESPLIT>visual_scene_sketchup7<CODESPLIT>/** *  <p>Lucerne University of Applied Sciences and Arts <a href="http://www.hslu.ch">http://www.hslu.ch</a></p> * *  <p>This source is free; you can redistribute it and/or modify it under *  the terms of the GNU General Public License and by nameing of the originally author</p> * * <p>this class does the same job as class 'Visual_Scene_sketchup8' for Sketchup version 7 but <u>is unused</u></p> * *  @author Markus Zimmermann <a href="http://www.die-seite.ch">http://www.die-seite.ch</a> *  @version 1.0 */<CODESPLIT>  p lucerne university applied sciences arts  a href  http   wwwhsluch  http   wwwhsluch  a   p    p this source free  redistribute and or modify  terms gnu general public license nameing originally author  p   p this class job class  visual scene sketchup8  sketchup version 7  u is unused  u   p    author markus zimmermann  a href  http   wwwdie seitech  http   wwwdie seitech  a    version 10<CODESPLIT>ID; <CODESPLIT> vazio id   <CODESPLIT> vazio id<CODESPLIT><VAZIO>[ getID ]<CODESPLIT><vazio>[ get id ] <CODESPLIT><vazio>[ id <CODESPLIT>[/** * @return the ID of this scene */] <CODESPLIT> return id scene <CODESPLIT>83<CODESPLIT>false<CODESPLIT>Visual_Scene_sketchup8<CODESPLIT>visual_scene_sketchup8<CODESPLIT>visual_scene_sketchup8<CODESPLIT>/** *  <p>Lucerne University of Applied Sciences and Arts <a href="http://www.hslu.ch">http://www.hslu.ch</a></p> * *  <p>This source is free; you can redistribute it and/or modify it under *  the terms of the GNU General Public License and by nameing of the originally author</p> * * <p> this class maps the Visual_Scene-tag and binds meterials to the geometries</p> * *  @author Markus Zimmermann <a href="http://www.die-seite.ch">http://www.die-seite.ch</a> *  @version 1.0 */<CODESPLIT>  p lucerne university applied sciences arts  a href  http   wwwhsluch  http   wwwhsluch  a   p    p this source free  redistribute and or modify  terms gnu general public license nameing originally author  p   p  class maps visual scene tag binds meterials geometries  p    author markus zimmermann  a href  http   wwwdie seitech  http   wwwdie seitech  a    version 10<CODESPLIT>ID; <CODESPLIT> vazio id   <CODESPLIT> vazio id<CODESPLIT><VAZIO>[ getID ]<CODESPLIT><vazio>[ get id ] <CODESPLIT><vazio>[ id <CODESPLIT>[/** * @return the ID of this scene */] <CODESPLIT> return id scene <CODESPLIT>84<CODESPLIT>false<CODESPLIT>Visualization<CODESPLIT>visualization<CODESPLIT>visualization<CODESPLIT>/** * Klasa mia?a s?u?y? do obs?ugi wizualizacji. Na dzie? obecny nie robi nic * @author Micha? Zimnicki */<CODESPLIT>klasa mia a s u y  obs ugi wizualizacji na dzie  obecny nie robi nic  author micha  zimnicki<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>85<CODESPLIT>false<CODESPLIT>Vm<CODESPLIT>vm<CODESPLIT>vm<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>handle = 0; error_code = 0; <CODESPLIT> vazio handle error code   <CODESPLIT> vazio handle error code<CODESPLIT><VAZIO>[ step ][ compile ][ stop ][ finalize ][ internal_init ]<CODESPLIT><vazio>[ step ][ compile ][ stop ][ finalize ][ internal_init ] <CODESPLIT><vazio>[ step compile stop finalize internal_init <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>86<CODESPLIT>false<CODESPLIT>Vocab<CODESPLIT>vocab<CODESPLIT>vocab<CODESPLIT>/** * Vocabulary definitions from http://vocab.org/relationship/.rdf * @author Auto-generated by schemagen on 19 Jul 2012 17:41 */<CODESPLIT>vocabulary definitions http   vocaborg relationship rdf  author auto generated schemagen 19 jul 2012 17 41<CODESPLIT>m_model = ModelFactory.createDefaultModel(); NS = "http://purl.org/vocab/relationship/"; NAMESPACE = m_model.createResource(NS); ambivalentOf = m_model.createProperty("http://purl.org/vocab/relationship/ambivalentOf"); antagonistOf = m_model.createProperty("http://purl.org/vocab/relationship/antagonistOf"); apprenticeTo = m_model.createProperty("http://purl.org/vocab/relationship/apprenticeTo"); childOf = m_model.createProperty("http://purl.org/vocab/relationship/childOf"); employedBy = m_model.createProperty("http://purl.org/vocab/relationship/employedBy"); employerOf = m_model.createProperty("http://purl.org/vocab/relationship/employerOf"); enemyOf = m_model.createProperty("http://purl.org/vocab/relationship/enemyOf"); grandchildOf = m_model.createProperty("http://purl.org/vocab/relationship/grandchildOf"); grandparentOf = m_model.createProperty("http://purl.org/vocab/relationship/grandparentOf"); influencedBy = m_model.createProperty("http://purl.org/vocab/relationship/influencedBy"); knowsByReputation = m_model.createProperty("http://purl.org/vocab/relationship/knowsByReputation"); knowsInPassing = m_model.createProperty("http://purl.org/vocab/relationship/knowsInPassing"); knowsOf = m_model.createProperty("http://purl.org/vocab/relationship/knowsOf"); mentorOf = m_model.createProperty("http://purl.org/vocab/relationship/mentorOf"); parentOf = m_model.createProperty("http://purl.org/vocab/relationship/parentOf"); participant = m_model.createProperty("http://purl.org/vocab/relationship/participant"); participantIn = m_model.createProperty("http://purl.org/vocab/relationship/participantIn"); wouldLikeToKnow = m_model.createProperty("http://purl.org/vocab/relationship/wouldLikeToKnow"); __ = m_model.createResource("http://purl.org/vocab/relationship/examples/1"); ___INSTANCE = m_model.createResource("http://purl.org/vocab/relationship/examples/2"); <CODESPLIT> vazio m model ns namespace ambivalentof antagonistof apprenticeto childof employedby employerof enemyof grandchildof grandparentof influencedby knowsbyreputation knowsinpassing knowsof mentorof parentof participant participantin wouldliketoknow       instance   <CODESPLIT> vazio model ns namespace ambivalentof antagonistof apprenticeto childof employedby employerof enemyof grandchildof grandparentof influencedby knowsbyreputation knowsinpassing knowsof mentorof parentof participant participantin wouldliketoknow       instance<CODESPLIT><VAZIO>[ getURI ]<CODESPLIT><vazio>[ get uri ] <CODESPLIT><vazio>[ uri <CODESPLIT>[/** * <p>The namespace of the vocabulary as a string</p> *  @see #NS */] <CODESPLIT> p the namespace vocabulary a string  p    see  ns <CODESPLIT>87<CODESPLIT>false<CODESPLIT>VoiceData<CODESPLIT>voice data<CODESPLIT>voice data<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ handleVoice ][ extractVoiceBits ][ packBits ][ convertByte ][ voiceDump ]<CODESPLIT><vazio>[ handle voice ][ extract voice bits ][ pack bits ][ convert byte ][ voice dump ] <CODESPLIT><vazio>[ handle voice extract voice bits pack bits convert byte voice dump <CODESPLIT>[// Handle incoming voice data] [// Get the voice data bits] [// Pack the bits into an int array] [// Get a single byte from the boolean array] [// A function to save voice data to enable debugging] <CODESPLIT>    handle incoming voice data      voice data bits      pack bits int array      a single byte boolean array      a function save voice data enable debugging  <CODESPLIT>88<CODESPLIT>false<CODESPLIT>VoltageControlFragment<CODESPLIT>voltage control fragment<CODESPLIT>voltage control fragment<CODESPLIT>/** * @author arif */<CODESPLIT> author arif<CODESPLIT>LOG_TAG = "NSTools.VoltageControlActivity"; maxArmVolt; maxIntVolt; armVoltages; intVoltages; preferences; <CODESPLIT> vazio log tag  maxarmvolt  maxintvolt  armvoltages  intvoltages  preferences   <CODESPLIT> vazio log tag  maxarmvolt  maxintvolt  armvoltages  intvoltages  preferences<CODESPLIT><VAZIO>[ onPreferenceAttached ][ showWarningDialog ][ createDefaultVoltPreference ][ readUvmvTable ][ readVoltages ][ saveVoltages ][ onPreferenceChange ]<CODESPLIT><vazio>[ on preference attached ][ show warning dialog ][ create default volt preference ][ read uvmv table ][ read voltages ][ save voltages ][ on preference change ] <CODESPLIT><vazio>[ preference attached show warning dialog create default volt preference read uvmv table read voltages save voltages preference change <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>89<CODESPLIT>false<CODESPLIT>VoltagePreference<CODESPLIT>voltage preference<CODESPLIT>voltage preference<CODESPLIT>/** * @author arif */<CODESPLIT> author arif<CODESPLIT>ignoreInterface = false; <CODESPLIT> vazio ignoreinterface   <CODESPLIT> vazio ignoreinterface<CODESPLIT><VAZIO>[ setIgnoreInterface ][ readPreloadValue ][ onSetInitialValue ][ writeValue ][ readValue ]<CODESPLIT><vazio>[ set ignore interface ][ read preload value ][ on set initial value ][ write value ][ read value ] <CODESPLIT><vazio>[ set ignore interface read preload set initial write read <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>90<CODESPLIT>false<CODESPLIT>VOMSSecurityContext<CODESPLIT>vomssecurity context<CODESPLIT>vomssecurity context<CODESPLIT>/** * A class representing an X.509 authentication context augmented with VOMS attributes. The context is stored in a {@link ThreadLocal}. * The validation and extraction of VOMS attributes is triggered by the {@link #setClientCertChain(X509Certificate[])} method. * * Attributes can then be accessed via the {@link #getFQANs()} method. When VOMS validation fails, no attributes are returned. * * @author andreaceccanti */<CODESPLIT>a class representing x509 authentication context augmented voms attributes context stored a   link threadlocal  validation extraction voms attributes triggered   link  setclientcertchain x509certificate     method attributes accessed   link  getfqans    method voms validation fails  attributes returned  author andreaceccanti<CODESPLIT>serialVersionUID = 1L; theSecurityContexts = new ThreadLocal<VOMSSecurityContext>(); validator; <CODESPLIT> vazio serialversionuid thesecuritycontexts  validator   <CODESPLIT> vazio serialversionuid thesecuritycontexts  validator<CODESPLIT><VAZIO>[ setClientCertChain ][ getCurrentContext ][ setCurrentContext ][ clearCurrentContext ][ getValidator ][ setValidator ][ getFQANs ]<CODESPLIT><vazio>[ set client cert chain ][ get current context ][ set current context ][ clear current context ][ get validator ][ set validator ][ get fqans ] <CODESPLIT><vazio>[ set client cert chain current context set current context clear current context validator set validator fqans <CODESPLIT>[<VAZIO>] [/** * Returns the {@link VOMSSecurityContext} associated to the current thread * * @return the {@link VOMSSecurityContext} associated to the current thread */] [/** * Sets the {@link VOMSSecurityContext} associated to the current thread * * @param ctxt the {@link VOMSSecurityContext} that will be associated to the current thread */] [/** * Clears the {@link VOMSSecurityContext} associated to the current thread */] [/** * Returns the {@link VOMSValidator} used to validate VOMS attributes extracted from client certificate chains * * @return the VOMS validator used to validate VOMS attributes */] [/** * Sets the {@link VOMSValidator} used to validate VOMS attributes extracted from client certificate chains * * @param validator the VOMS validator that will be used to validate VOMS attributes */] [<VAZIO>] <CODESPLIT>returns   link vomssecuritycontext  current thread  return   link vomssecuritycontext  current thread sets   link vomssecuritycontext  current thread  param ctxt   link vomssecuritycontext  current thread clears   link vomssecuritycontext  current thread returns   link vomsvalidator  validate voms attributes extracted client certificate chains  return voms validator validate voms attributes sets   link vomsvalidator  validate voms attributes extracted client certificate chains  param validator voms validator validate voms attributes <CODESPLIT>91<CODESPLIT>false<CODESPLIT>VOMSSecurityContextHandler<CODESPLIT>vomssecurity context handler<CODESPLIT>vomssecurity context handler<CODESPLIT>/** * A Jetty Handler that initializes a {@link VOMSSecurityContext} and logs a message about * the authenticated connection. * * It should be included in front of other handlers to initialize the security context so that handlers * down the line can process the X.509 and VOMS attributes and leverage the information to take * authorization decisions. * * @author andreaceccanti */<CODESPLIT>a jetty handler initializes a   link vomssecuritycontext  logs a message authenticated connection included front handlers initialize security context handlers line process x509 voms attributes leverage information authorization decisions  author andreaceccanti<CODESPLIT>log = LoggerFactory.getLogger(VOMSSecurityContextHandler.class); <CODESPLIT> vazio log   <CODESPLIT> vazio log<CODESPLIT><VAZIO>[ handle ]<CODESPLIT><vazio>[ handle ] <CODESPLIT><vazio>[ handle <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>92<CODESPLIT>false<CODESPLIT>VOMSSecurityInfo<CODESPLIT>vomssecurity info<CODESPLIT>vomssecurity info<CODESPLIT>/** * An interface providing access to VOMS attributes. * * @author andreaceccanti */<CODESPLIT>interface providing access voms attributes  author andreaceccanti<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ getFQANs ]<CODESPLIT><vazio>[ get fqans ] <CODESPLIT><vazio>[ fqans <CODESPLIT>[/** * Returns an array of string representation of valid VOMS Fully Qualified Attribute Names. * * @return a possibly empty array of VOMS FQANs */] <CODESPLIT>returns array string representation valid voms fully qualified attribute names  return a possibly empty array voms fqans <CODESPLIT>93<CODESPLIT>false<CODESPLIT>VorlesungsDetailPanel<CODESPLIT>vorlesungs detail panel<CODESPLIT>vorlesungs detail panel<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>id; select; p; anOabBtn; beschreibungsFeld; detailLabel; jScrollPane1; lehrenderLabel; pruefenderLabel; timeLabel; titelLabel; <CODESPLIT> vazio id  select  p  anoabbtn  beschreibungsfeld  detaillabel  jscrollpane1  lehrenderlabel  pruefenderlabel  timelabel  titellabel   <CODESPLIT> vazio id  select   anoabbtn  beschreibungsfeld  detaillabel  jscrollpane1  lehrenderlabel  pruefenderlabel  timelabel  titellabel<CODESPLIT><VAZIO>[ initComponents ][ anOabBtnActionPerformed ][ setPanelData ]<CODESPLIT><vazio>[ init components ][ an oab btn action performed ][ set panel data ] <CODESPLIT><vazio>[ init components oab btn action performed set panel data <CODESPLIT>[/** * initComponents() Initialisiert die Komponenten. */] [/** * anOabBtnActionPerformed(ActionEvent) * @param evt */] [/** * setPanelData(HashMap) * @param data */] <CODESPLIT>initcomponents   initialisiert die komponenten anoabbtnactionperformed actionevent   param evt setpaneldata hashmap   param data <CODESPLIT>94<CODESPLIT>false<CODESPLIT>VoteCommand<CODESPLIT>vote command<CODESPLIT>vote command<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>voteUrl = "http://minestatus.net/26507-xboxcraft/vote"; <CODESPLIT> vazio voteurl   <CODESPLIT> vazio voteurl<CODESPLIT><VAZIO>[ onCommand ]<CODESPLIT><vazio>[ on command ] <CODESPLIT><vazio>[ command <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>95<CODESPLIT>false<CODESPLIT>VotingTask<CODESPLIT>voting task<CODESPLIT>voting task<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>GOOD_RESPONSE = "{}"; baseUrl; redditPost; sessionManager; context; isUpvote; <CODESPLIT> vazio good response  baseurl  redditpost  sessionmanager  context  isupvote   <CODESPLIT> vazio good response  baseurl  redditpost  sessionmanager  context  isupvote<CODESPLIT><VAZIO>[ doInBackground ][ onPostExecute ]<CODESPLIT><vazio>[ do in background ][ on post execute ] <CODESPLIT><vazio>[ background post execute <CODESPLIT>[<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>96<CODESPLIT>false<CODESPLIT>Voxmail<CODESPLIT>voxmail<CODESPLIT>voxmail<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>voxmailDao = null; voxmailService = null; vmsm = null; voxmail = null; props = null; basePath = null; <CODESPLIT> vazio voxmaildao voxmailservice vmsm voxmail props basepath   <CODESPLIT> vazio voxmaildao voxmailservice vmsm voxmail props basepath<CODESPLIT><VAZIO>[ getInstance ][ getVoxmailDAO ][ getVoxmailService ][ commit ][ rollback ][ update ][ saveObject ][ releaseSession ][ getProps ][ init ][ destroy ][ setBasePath ][ getBasePath ]<CODESPLIT><vazio>[ get instance ][ get voxmail dao ][ get voxmail service ][ commit ][ rollback ][ update ][ save object ][ release session ][ get props ][ init ][ destroy ][ set base path ][ get base path ] <CODESPLIT><vazio>[ instance voxmail dao voxmail service commit rollback update save object release session props init destroy set base path base path <CODESPLIT>[<VAZIO>] [/** * @return DAO for Voxmail DAO */] [/** * @return DAO for Voxmail Service */] [/** * Saves any changes made to the Voxmail model objects to the database.  Should be called * whenever the transaction is complete.  This is normally done in the services (Business * Delegates), and generally should not be done in the Action classes or the DAO classes. * @throws VoxmailException */] [/** * This will cancel any changes made to the Voxmail model.  At this point all references to * any Voxmail objects should be thrown away, and re-grabbed by going to a Service or DAO. * @throws VoxmailException */] [/** * @throws VoxmailException */] [/** * Saves an individual object.  This should not be commonly used, but only used when you * want to do a partial transaction.  Normally Voxmail.commit() will save all the model * changes. * @param object * @throws VoxmailException */] [/** * This will clean up any thread context state, this should be called when the thread is done * doing Voxmail model work (for a web container this could be done in a filter before the * thread is returned to the thread pool.) * @throws VoxmailException */] [/** * @return Returns the Properties from bluesky.properties file. */] [/** * Initializes the Voxmail application, should be called when the application is instantiated. * @throws Voxmail Exception */] [/** * Cleans up the Voxmail application, should be called when application context is destroyed. * @throws VoxmailException */] [<VAZIO>] [<VAZIO>] <CODESPLIT> return dao voxmail dao  return dao voxmail service saves made voxmail model objects database  called transaction complete  services  business delegates   generally action classes dao classes  throws voxmailexception cancel made voxmail model  point references voxmail objects thrown away  re grabbed a service dao  throws voxmailexception  throws voxmailexception saves individual object  commonly used  a partial transaction  voxmailcommit   save model changes  param object  throws voxmailexception clean thread context state  called thread voxmail model work  for a web container a filter thread returned thread pool   throws voxmailexception  return returns properties blueskyproperties file initializes voxmail application  called application instantiated  throws voxmail exception cleans voxmail application  called application context destroyed  throws voxmailexception <CODESPLIT>97<CODESPLIT>false<CODESPLIT>VoxmailAction<CODESPLIT>voxmail action<CODESPLIT>voxmail action<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>df = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT); <CODESPLIT> vazio df   <CODESPLIT> vazio df<CODESPLIT><VAZIO>[ execute ]<CODESPLIT><vazio>[ execute ] <CODESPLIT><vazio>[ execute <CODESPLIT>[/** * Method execute * @param mapping * @param form * @param request * @param response * @return ActionForward */] <CODESPLIT>method execute  param mapping  param form  param request  param response  return actionforward <CODESPLIT>98<CODESPLIT>false<CODESPLIT>VoxmailDAO<CODESPLIT>voxmail dao<CODESPLIT>voxmail dao<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ createMailbox ][ updateMailbox ][ getMailboxByContactId ][ getMailboxByPhoneNumber ][ getMailboxByMailboxId ]<CODESPLIT><vazio>[ create mailbox ][ update mailbox ][ get mailbox by contact id ][ get mailbox by phone number ][ get mailbox by mailbox id ] <CODESPLIT><vazio>[ create mailbox update mailbox mailbox contact id mailbox phone number mailbox mailbox id <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>99<CODESPLIT>false<CODESPLIT>VoxmailException<CODESPLIT>voxmail exception<CODESPLIT>voxmail exception<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>serialVersionUID = 1L; <CODESPLIT> vazio serialversionuid   <CODESPLIT> vazio serialversionuid<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>100<CODESPLIT>false<CODESPLIT>VoxmailHibernateManagement<CODESPLIT>voxmail hibernate management<CODESPLIT>voxmail hibernate management<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ init ][ doFilter ][ destroy ]<CODESPLIT><vazio>[ init ][ do filter ][ destroy ] <CODESPLIT><vazio>[ init filter destroy <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>101<CODESPLIT>false<CODESPLIT>VoxmailService<CODESPLIT>voxmail service<CODESPLIT>voxmail service<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ updateOptions ][ updateMailbox ][ createMailbox ][ updateGreeting ][ retrieveMailbox ][ retrieveMailboxByContactId ][ retrieveMailboxByPhoneNumber ][ login ]<CODESPLIT><vazio>[ update options ][ update mailbox ][ create mailbox ][ update greeting ][ retrieve mailbox ][ retrieve mailbox by contact id ][ retrieve mailbox by phone number ][ login ] <CODESPLIT><vazio>[ update options update mailbox create mailbox update greeting retrieve mailbox retrieve mailbox contact id retrieve mailbox phone number login <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>102<CODESPLIT>false<CODESPLIT>VoxmailSessionManagement<CODESPLIT>voxmail session management<CODESPLIT>voxmail session management<CODESPLIT>/** * @author shawn * Follows open Session in View Pattern http://www.hibernate.org/43.html */<CODESPLIT> author shawn open session view pattern http   wwwhibernateorg 43html<CODESPLIT>log = LogFactory.getLog(VoxmailSessionManagement.class); sessions = null; session = new ThreadLocal(); transaction = new ThreadLocal(); serviceCache = new ThreadLocal(); <CODESPLIT> vazio log sessions session transaction servicecache   <CODESPLIT> vazio log sessions session transaction servicecache<CODESPLIT><VAZIO>[ getSessionFactory ][ init ][ destroy ][ getSession ][ getExternalSession ][ getTransaction ][ getServiceCache ][ update ][ saveObject ][ commit ][ rollback ][ releaseSession ][ isSessionActive ][ isTransactionActive ][ isServiceCacheActive ]<CODESPLIT><vazio>[ get session factory ][ init ][ destroy ][ get session ][ get external session ][ get transaction ][ get service cache ][ update ][ save object ][ commit ][ rollback ][ release session ][ is session active ][ is transaction active ][ is service cache active ] <CODESPLIT><vazio>[ session factory init destroy session external session transaction service cache update save object commit rollback release session session active transaction active service cache active <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>103<CODESPLIT>false<CODESPLIT>Voyage<CODESPLIT>voyage<CODESPLIT>voyage<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>time; <CODESPLIT> vazio time   <CODESPLIT> vazio time<CODESPLIT><VAZIO>[ getPath ][ setInstance ][ getInstance ][ size ][ addInstance ][ getTimes ][ getTimeAt ][ getFormat ][ getVoyage ][ getLast ][ isEmpty ][ toString ]<CODESPLIT><vazio>[ get path ][ set instance ][ get instance ][ size ][ add instance ][ get times ][ get time at ][ get format ][ get voyage ][ get last ][ is empty ][ to string ] <CODESPLIT><vazio>[ path set instance instance size add instance times time format voyage last empty string <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>104<CODESPLIT>false<CODESPLIT>VServerPush<CODESPLIT>vserver push<CODESPLIT>vserver push<CODESPLIT>/** * Vaadin client widget class for ServerPush that listens for broadcasts */<CODESPLIT>vaadin client widget class serverpush listens broadcasts<CODESPLIT>CONTEXT_PATH = "contextPath"; COMET = "comet"; CLASSNAME = "v-" + COMET; paintableId; client; atmosphereClient; contextPath; <CODESPLIT> vazio context path comet classname  paintableid  client  atmosphereclient  contextpath   <CODESPLIT> vazio context path comet classname  paintableid  client  atmosphereclient  contextpath<CODESPLIT><VAZIO>[ updateFromUIDL ][ update ][ onConnected ][ onBeforeDisconnected ][ onDisconnected ][ onError ][ onHeartbeat ][ onRefresh ][ onMessage ][ onDetach ]<CODESPLIT><vazio>[ update from uidl ][ update ][ on connected ][ on before disconnected ][ on disconnected ][ on error ][ on heartbeat ][ on refresh ][ on message ][ on detach ] <CODESPLIT><vazio>[ update uidl update connected disconnected disconnected error heartbeat refresh message detach <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>105<CODESPLIT>false<CODESPLIT>vSpout<CODESPLIT>v spout<CODESPLIT>spout<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>playerScreens = new HashMap<SpoutPlayer, CustomizationScreen>(); spoutPlayerData = new HashMap<SpoutPlayer, SpoutPlayerData>(); <CODESPLIT> vazio playerscreens spoutplayerdata   <CODESPLIT> vazio playerscreens spoutplayerdata<CODESPLIT><VAZIO>[ createSpoutPlayerData ]<CODESPLIT><vazio>[ create spout player data ] <CODESPLIT><vazio>[ create spout player data <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>106<CODESPLIT>false<CODESPLIT>W32API<CODESPLIT>w32api<CODESPLIT>w32api<CODESPLIT>/** * Base type for most W32 API libraries.  Provides standard options * for unicode/ASCII mappings.  Set the system property <code>w32.ascii</code> * to <code>true</code> to default to the ASCII mappings. */<CODESPLIT>base type w32 api libraries  standard options unicode ascii mappings  set system property  code w32ascii  code   code true  code  default ascii mappings<CODESPLIT>UNICODE_OPTIONS = new HashMap<String, Object>() {    {        put(OPTION_TYPE_MAPPER, W32APITypeMapper.UNICODE);        put(OPTION_FUNCTION_MAPPER, W32APIFunctionMapper.UNICODE);    }}; ASCII_OPTIONS = new HashMap<String, Object>() {    {        put(OPTION_TYPE_MAPPER, W32APITypeMapper.ASCII);        put(OPTION_FUNCTION_MAPPER, W32APIFunctionMapper.ASCII);    }}; DEFAULT_OPTIONS = Boolean.getBoolean("w32.ascii") ? ASCII_OPTIONS : UNICODE_OPTIONS; isUnicode = DEFAULT_OPTIONS.equals(UNICODE_OPTIONS); INVALID_HANDLE_VALUE = new HANDLE(Pointer.createConstant(0xffffffffL)); HWND_BROADCAST = new HWND(Pointer.createConstant(0xFFFF)); <CODESPLIT> vazio unicode options         put option function mapper  w32apifunctionmapper unicode         ascii options         put option function mapper  w32apifunctionmapper ascii         default options isunicode invalid handle value hwnd broadcast   <CODESPLIT> vazio unicode options         put option function mapper  w32apifunctionmapper unicode         ascii options         put option function mapper  w32apifunctionmapper ascii         default options isunicode invalid handle hwnd broadcast<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>107<CODESPLIT>false<CODESPLIT>W32APITests<CODESPLIT>w32apitests<CODESPLIT>w32apitests<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ handleShouldBeInvalid ]<CODESPLIT><vazio>[ handle should be invalid ] <CODESPLIT><vazio>[ handle invalid <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>108<CODESPLIT>false<CODESPLIT>W32Errors<CODESPLIT>w32errors<CODESPLIT>w32errors<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>NO_ERROR = 0; ERROR_INVALID_FUNCTION = 1; ERROR_FILE_NOT_FOUND = 2; ERROR_PATH_NOT_FOUND = 3; <CODESPLIT> vazio no error error invalid function error file not found error path not found   <CODESPLIT> vazio error error invalid function error file found error path found<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>109<CODESPLIT>false<CODESPLIT>WaarpCounter32<CODESPLIT>waarp counter32<CODESPLIT>waarp counter32<CODESPLIT>/** * Generic Counter32 with update possibility for GoldenGate * * @author Frederic Bregier */<CODESPLIT>generic counter32 update possibility goldengate  author frederic bregier<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ setInternalValue ][ setInternalValue ][ getValue ][ clone ][ isDynamic ]<CODESPLIT><vazio>[ set internal value ][ set internal value ][ get value ][ clone ][ is dynamic ] <CODESPLIT><vazio>[ set internal set internal clone dynamic <CODESPLIT>[/** * Function to set the data before it is accessed by SNMP4J. This function * MUST call setValue(long) */] [/** * Function to set the data before it is accessed by SNMP4J. This function * MUST call setValue(long) */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.UnsignedInteger32#getValue()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.Gauge32#clone()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.AbstractVariable#isDynamic()     */] <CODESPLIT>function set data accessed snmp4j function call setvalue long  function set data accessed snmp4j function call setvalue long           non javadoc            see orgsnmp4jsmiunsignedinteger32 getvalue                non javadoc            see orgsnmp4jsmigauge32 clone                non javadoc            see orgsnmp4jsmiabstractvariable isdynamic       <CODESPLIT>110<CODESPLIT>false<CODESPLIT>WaarpEntry<CODESPLIT>waarp entry<CODESPLIT>waarp entry<CODESPLIT>/** * Entry for MIB definition * * @author Frederic Bregier */<CODESPLIT>entry mib definition  author frederic bregier<CODESPLIT>smiConstantsType; access; <CODESPLIT> vazio smiconstantstype  access   <CODESPLIT> vazio smiconstantstype  access<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>111<CODESPLIT>false<CODESPLIT>WaarpGauge32<CODESPLIT>waarp gauge32<CODESPLIT>waarp gauge32<CODESPLIT>/** * Generic Gauge32 with update possibility for GoldenGate * * @author Frederic Bregier */<CODESPLIT>generic gauge32 update possibility goldengate  author frederic bregier<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ setInternalValue ][ setInternalValue ][ getValue ][ clone ][ isDynamic ]<CODESPLIT><vazio>[ set internal value ][ set internal value ][ get value ][ clone ][ is dynamic ] <CODESPLIT><vazio>[ set internal set internal clone dynamic <CODESPLIT>[/** * Function to set the data before it is accessed by SNMP4J. This function * MUST call setValue(long) */] [/** * Function to set the data before it is accessed by SNMP4J. This function * MUST call setValue(long) */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.UnsignedInteger32#getValue()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.Gauge32#clone()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.AbstractVariable#isDynamic()     */] <CODESPLIT>function set data accessed snmp4j function call setvalue long  function set data accessed snmp4j function call setvalue long           non javadoc            see orgsnmp4jsmiunsignedinteger32 getvalue                non javadoc            see orgsnmp4jsmigauge32 clone                non javadoc            see orgsnmp4jsmiabstractvariable isdynamic       <CODESPLIT>112<CODESPLIT>false<CODESPLIT>WaarpImplPrivateMib<CODESPLIT>waarp impl private mib<CODESPLIT>waarp impl private mib<CODESPLIT>/** * Example of Implementation of WaarpPrivateMib * * @author Frederic Bregier */<CODESPLIT>implementation waarpprivatemib  author frederic bregier<CODESPLIT>logger = WaarpInternalLoggerFactory.getLogger(WaarpImplPrivateMib.class); <CODESPLIT> vazio logger   <CODESPLIT> vazio logger<CODESPLIT><VAZIO>[ updateServices ][ updateServices ][ agentRegisterWaarpMib ][ notifyInfo ][ notifyError ]<CODESPLIT><vazio>[ update services ][ update services ][ agent register waarp mib ][ notify info ][ notify error ] <CODESPLIT><vazio>[ update services update services agent register waarp mib notify info notify error <CODESPLIT>[<VAZIO>] [<VAZIO>] [/*     * (non-Javadoc)     *      * @see org.waarp.snmp.GgPrivateMib#agentRegisterWaarpMib()     */] [/** * Example of trap for All * * @param message * @param message2 * @param number */] [/** * Example of trap for Error * * @param message * @param message2 * @param number */] <CODESPLIT>         non javadoc            see orgwaarpsnmpggprivatemib agentregisterwaarpmib       trap  param message  param message2  param number trap error  param message  param message2  param number <CODESPLIT>113<CODESPLIT>false<CODESPLIT>WaarpInterfaceMib<CODESPLIT>waarp interface mib<CODESPLIT>waarp interface mib<CODESPLIT>/** * Interface for All MIBs in Waarp project * * @author Frederic Bregier */<CODESPLIT>interface mibs waarp project  author frederic bregier<CODESPLIT>rootEnterpriseMib = new OID(".1.3.6.1.4.1"); <CODESPLIT> vazio rootenterprisemib   <CODESPLIT> vazio rootenterprisemib<CODESPLIT><VAZIO>[ setAgent ][ getBaseOidStartOrShutdown ][ getSNMPv2MIB ][ updateServices ][ updateServices ]<CODESPLIT><vazio>[ set agent ][ get base oid start or shutdown ][ get snmpv2mib ][ update services ][ update services ] <CODESPLIT><vazio>[ set agent base oid start shutdown snmpv2mib update services update services <CODESPLIT>[/** * Set the agent * * @param agent */] [/** * @return the base OID for trap or notification of Start or Shutdown */] [/** * @return the SNMPv2MIB associated with this MIB */] [/** * Update the row for these services * * @param scalar */] [/** * Update the row for these services * * @param range */] <CODESPLIT>set agent  param agent  return base oid trap notification start shutdown  return snmpv2mib mib update row services  param scalar update row services  param range <CODESPLIT>114<CODESPLIT>false<CODESPLIT>WaarpInterfaceMonitor<CODESPLIT>waarp interface monitor<CODESPLIT>waarp interface monitor<CODESPLIT>/** * This interface defines a Monitor to be used in Waarp projects, for HTTP * support or SNMP support. * * @author Frederic Bregier */<CODESPLIT>interface defines a monitor waarp projects  http support snmp support  author frederic bregier<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ setAgent ][ initialize ][ releaseResources ]<CODESPLIT><vazio>[ set agent ][ initialize ][ release resources ] <CODESPLIT><vazio>[ set agent initialize release resources <CODESPLIT>[/** * @param agent */] [/** * To initialize the monitor */] [/** * To release the monitor resources. The monitor is no more valid after this * call */] <CODESPLIT> param agent initialize monitor release monitor resources monitor valid call <CODESPLIT>115<CODESPLIT>false<CODESPLIT>WaarpMORow<CODESPLIT>waarp morow<CODESPLIT>waarp morow<CODESPLIT>/** * MORow implementation for GoldenGate * * @author Frederic Bregier */<CODESPLIT>morow implementation goldengate  author frederic bregier<CODESPLIT>row; type; reference; mib; mibLevel; <CODESPLIT> vazio row  type  reference  mib  miblevel   <CODESPLIT> vazio row  type  reference  mib  miblevel<CODESPLIT><VAZIO>[ setValue ][ registerMOs ][ unregisterMOs ]<CODESPLIT><vazio>[ set value ][ register mos ][ unregister mos ] <CODESPLIT><vazio>[ set register mos unregister mos <CODESPLIT>[/** * Set a Value in this Row * @param index * @param value * @throws IllegalArgumentException */] [<VAZIO>] [<VAZIO>] <CODESPLIT>set a row  param index  param  throws illegalargumentexception <CODESPLIT>116<CODESPLIT>false<CODESPLIT>WaarpMOScalar<CODESPLIT>waarp moscalar<CODESPLIT>waarp moscalar<CODESPLIT>/** * GoldenGate MOScalar implementation * * @author Frederic Bregier */<CODESPLIT>goldengate moscalar implementation  author frederic bregier<CODESPLIT>row; <CODESPLIT> vazio row   <CODESPLIT> vazio row<CODESPLIT><VAZIO>[ get ][ find ]<CODESPLIT><vazio>[ get ][ find ] <CODESPLIT><vazio>[ find <CODESPLIT>[/** * Called when a direct external access is done to this scalar. Therefore * this function can be override to host update check. * * @see org.snmp4j.agent.mo.MOScalar#get(org.snmp4j.agent.request.SubRequest) */] [/** * Called when a multiple external access is done to this scalar and the * following. Therefore this function can be override to host update check. * * @see org.snmp4j.agent.mo.MOScalar#find(org.snmp4j.agent.MOScope) */] <CODESPLIT>called a direct external access scalar function override host update check  see orgsnmp4jagentmomoscalar get orgsnmp4jagentrequestsubrequest  called a multiple external access scalar following function override host update check  see orgsnmp4jagentmomoscalar find orgsnmp4jagentmoscope  <CODESPLIT>117<CODESPLIT>false<CODESPLIT>WaarpPrivateMib<CODESPLIT>waarp private mib<CODESPLIT>waarp private mib<CODESPLIT>/** * Private MIB for Waarp OpenR66 * * @author Frederic Bregier */<CODESPLIT>private mib waarp openr66  author frederic bregier<CODESPLIT>logger = WaarpInternalLoggerFactory.getLogger(WaarpPrivateMib.class); textualSysDecr = null; ggObjectId = null; contactName = "Nobody"; textualName = "OpenR66"; address = "somewhere"; service = 72; upTime = null; applicationProtocolBase = null; applicationProtocol = null; smiPrivateCode = 66666; smiTypeWaarp = 66; srootOIDWaarp; rootOIDWaarp; rootOIDWaarpNotif; rootOIDWaarpNotifStartOrShutdown; rootOIDWaarpInfo; rowInfo; rootOIDWaarpGlobal; rowGlobal; rootOIDWaarpGlobalUptime; scalarUptime = null; rootOIDWaarpDetailed; rowDetailed; rootOIDWaarpError; rowError; snmpv2; agent; WaarpDefinition = { // applNamenew WaarpEntry(SMIConstants.SYNTAX_OCTET_STRING, MOAccessImpl.ACCESS_READ_ONLY), // applServerNamenew WaarpEntry(SMIConstants.SYNTAX_OCTET_STRING, MOAccessImpl.ACCESS_READ_ONLY), // applVersionnew WaarpEntry(SMIConstants.SYNTAX_OCTET_STRING, MOAccessImpl.ACCESS_READ_ONLY), // applDescriptionnew WaarpEntry(SMIConstants.SYNTAX_OCTET_STRING, MOAccessImpl.ACCESS_READ_ONLY), // applURLnew WaarpEntry(SMIConstants.SYNTAX_OCTET_STRING, MOAccessImpl.ACCESS_READ_ONLY), // applApplicationProtocolnew WaarpEntry(SMIConstants.SYNTAX_OBJECT_IDENTIFIER, MOAccessImpl.ACCESS_READ_ONLY) }; WaarpGlobalValues = { // applUptimenew WaarpEntry(SMIConstants.SYNTAX_TIMETICKS, MOAccessImpl.ACCESS_READ_ONLY), // applOperStatusnew WaarpEntry(SMIConstants.SYNTAX_INTEGER, MOAccessImpl.ACCESS_READ_ONLY), // applLastChangenew WaarpEntry(SMIConstants.SYNTAX_TIMETICKS, MOAccessImpl.ACCESS_READ_ONLY), // applInboundAssociationsnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // applOutboundAssociationsnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // applAccumInboundAssociationsnew WaarpEntry(SMIConstants.SYNTAX_COUNTER32, MOAccessImpl.ACCESS_READ_ONLY), // applAccumOutboundAssociationsnew WaarpEntry(SMIConstants.SYNTAX_COUNTER32, MOAccessImpl.ACCESS_READ_ONLY), // applLastInboundActivitynew WaarpEntry(SMIConstants.SYNTAX_TIMETICKS, MOAccessImpl.ACCESS_READ_ONLY), // applLastOutboundActivitynew WaarpEntry(SMIConstants.SYNTAX_TIMETICKS, MOAccessImpl.ACCESS_READ_ONLY), // applRejectedInboundAssociationsnew WaarpEntry(SMIConstants.SYNTAX_COUNTER32, MOAccessImpl.ACCESS_READ_ONLY), // applFailedOutboundAssociationsnew WaarpEntry(SMIConstants.SYNTAX_COUNTER32, MOAccessImpl.ACCESS_READ_ONLY), // Bandwidth// applInboundBandwidthKBSnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // applOutboundBandwidthKBSnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // Overall status including past, future and current transfers// nbInfoUnknownnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbInfoNotUpdatednew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbInfoInterruptednew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbInfoToSubmitnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbInfoErrornew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbInfoRunningnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbInfoDonenew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // Current situation of all transfers, running or not// nbStepAllTransfernew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // memoryTotalnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // memoryFreenew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // memoryUsednew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbThreadsnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbNetworkConnectionnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY) }; WaarpDetailedValues = { // nbStepNotasknew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStepPretasknew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStepTransfernew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStepPosttasknew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStepAllDonenew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStepErrornew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // First on Running Transfers only// nbAllRunningStepnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbRunningStepnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbInitOkStepnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbPreProcessingOkStepnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbTransferOkStepnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbPostProcessingOkStepnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbCompleteOkStepnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY) }; WaarpErrorValues = { // Error Status on all transfers// nbStatusConnectionImpossiblenew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusServerOverloadednew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusBadAuthentnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusExternalOpnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusTransferErrornew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusMD5Errornew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusDisconnectionnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusFinalOpnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusUnimplementednew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusInternalnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusWarningnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusQueryAlreadyFinishednew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusQueryStillRunningnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusNotKnownHostnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusQueryRemotelyUnknownnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusCommandNotFoundnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusPassThroughModenew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusRemoteShutdownnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusShutdownnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusRemoteErrornew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusStoppednew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusCancelednew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusFileNotFoundnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY), // nbStatusUnknownnew WaarpEntry(SMIConstants.SYNTAX_GAUGE32, MOAccessImpl.ACCESS_READ_ONLY) }; <CODESPLIT> vazio logger textualsysdecr ggobjectid contactname textualname address service uptime applicationprotocolbase applicationprotocol smiprivatecode smitypewaarp  srootoidwaarp  rootoidwaarp  rootoidwaarpnotif  rootoidwaarpnotifstartorshutdown  rootoidwaarpinfo  rowinfo  rootoidwaarpglobal  rowglobal  rootoidwaarpglobaluptime scalaruptime  rootoidwaarpdetailed  rowdetailed  rootoidwaarperror  rowerror  snmpv2  agent waarpdefinition waarpglobalvalues waarpdetailedvalues waarperrorvalues   <CODESPLIT> vazio logger textualsysdecr ggobjectid contactname textualname address service uptime applicationprotocolbase applicationprotocol smiprivatecode smitypewaarp  srootoidwaarp  rootoidwaarp  rootoidwaarpnotif  rootoidwaarpnotifstartorshutdown  rootoidwaarpinfo  rowinfo  rootoidwaarpglobal  rowglobal  rootoidwaarpglobaluptime scalaruptime  rootoidwaarpdetailed  rowdetailed  rootoidwaarperror  rowerror  snmpv2  agent waarpdefinition waarpglobalvalues waarpdetailedvalues waarperrorvalues<CODESPLIT><VAZIO>[ setAgent ][ getBaseOidStartOrShutdown ][ getSNMPv2MIB ][ agentRegisterSystem ][ defaultAgentRegisterWaarpMib ][ agentRegisterWaarpMib ][ agentUnregisterMibs ][ registerMOs ][ unregisterMOs ][ changeStatus ]<CODESPLIT><vazio>[ set agent ][ get base oid start or shutdown ][ get snmpv2mib ][ agent register system ][ default agent register waarp mib ][ agent register waarp mib ][ agent unregister mibs ][ register mos ][ unregister mos ][ change status ] <CODESPLIT><vazio>[ set agent base oid start shutdown snmpv2mib agent register system default agent register waarp mib agent register waarp mib agent unregister mibs register mos unregister mos change status <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [/** * Unregister and Register again the SNMPv2MIB with System adapted to this * Mib * * @throws DuplicateRegistrationException */] [/** * Register this MIB * * @throws DuplicateRegistrationException */] [/** * Register this MIB * * @throws DuplicateRegistrationException */] [/** * Unregister this MIB */] [<VAZIO>] [<VAZIO>] [/** * Change the status and the LastChange Timeticks * * @param status */] <CODESPLIT>unregister register snmpv2mib system adapted mib  throws duplicateregistrationexception register mib  throws duplicateregistrationexception register mib  throws duplicateregistrationexception unregister mib change status lastchange timeticks  param status <CODESPLIT>118<CODESPLIT>false<CODESPLIT>WaarpPrivateMonitor<CODESPLIT>waarp private monitor<CODESPLIT>waarp private monitor<CODESPLIT>/** * This implementation show how to support SNMP. * * @author Frederic Bregier */<CODESPLIT>implementation show support snmp  author frederic bregier<CODESPLIT>logger = WaarpInternalLoggerFactory.getLogger(WaarpPrivateMonitor.class); agent; <CODESPLIT> vazio logger  agent   <CODESPLIT> vazio logger  agent<CODESPLIT><VAZIO>[ getAgent ][ setAgent ][ initialize ][ releaseResources ][ generalValuesUpdate ][ detailedValuesUpdate ][ errorValuesUpdate ]<CODESPLIT><vazio>[ get agent ][ set agent ][ initialize ][ release resources ][ general values update ][ detailed values update ][ error values update ] <CODESPLIT><vazio>[ agent set agent initialize release resources general values update detailed values update error values update <CODESPLIT>[/** * @return the agent */] [/** * @param agent *            the agent to set */] [<VAZIO>] [<VAZIO>] [/*     * function to test if the computations need to be redone     *      */] [<VAZIO>] [<VAZIO>] <CODESPLIT> return agent  param agent            agent set         function test computations redone          <CODESPLIT>119<CODESPLIT>false<CODESPLIT>WaarpSnmpAgent<CODESPLIT>waarp snmp agent<CODESPLIT>waarp snmp agent<CODESPLIT>/** * This Agent contains some functionalities for running a version 2c and 3 of * SNMP agent. * * @author Frederic Bregier */<CODESPLIT>agent functionalities running a version 2c 3 snmp agent  author frederic bregier<CODESPLIT>logger = WaarpInternalLoggerFactory.getLogger(WaarpSnmpAgent.class); address = new String[] { SnmpConfiguration.DEFAULTADDRESS }; nbThread = 4; isFilterAccessEnabled = false; useTrap = true; trapLevel = 0; listUsmUser; listTargetElements; hasV2 = false; hasV3 = false; systemTimeStart = System.currentTimeMillis(); workerPool = null; monitor; mib; <CODESPLIT> vazio logger address nbthread isfilteraccessenabled usetrap traplevel  listusmuser  listtargetelements hasv2 hasv3 systemtimestart workerpool  monitor  mib   <CODESPLIT> vazio logger address nbthread isfilteraccessenabled usetrap traplevel  listusmuser  listtargetelements hasv2 hasv3 systemtimestart workerpool  monitor  mib<CODESPLIT><VAZIO>[ getMonitor ][ getMib ][ getUptime ][ getUptimeSystemTime ][ registerManagedObjects ][ unregisterManagedObjects ][ unregisterManagedObject ][ addUsmUser ][ addNotificationTargets ][ addViews ][ addCommunities ][ initTransportMappings ][ start ][ sendColdStartNotification ][ sendShutdownNotification ][ stop ]<CODESPLIT><vazio>[ get monitor ][ get mib ][ get uptime ][ get uptime system time ][ register managed objects ][ unregister managed objects ][ unregister managed object ][ add usm user ][ add notification targets ][ add views ][ add communities ][ init transport mappings ][ start ][ send cold start notification ][ send shutdown notification ][ stop ] <CODESPLIT><vazio>[ monitor mib uptime uptime system time register managed objects unregister managed objects unregister managed object add usm user add notification targets add views add communities init transport mappings start send cold start notification send shutdown notification stop <CODESPLIT>[/** * @return the monitor */] [/** * @return the mib */] [/** * @return the uptime in ms */] [/** * @return the uptime but in System time in ms */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.agent.BaseAgent#registerManagedObjects()     *      * Register additional managed objects at the agent's server.     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.agent.BaseAgent#unregisterManagedObjects()     *      * Unregister the basic MIB modules from the agent's MOServer.     */] [/** * @param moGroup */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.agent.BaseAgent#addUsmUser(org.snmp4j.security.USM)     *      * Adds all the necessary initial users to the USM. Only applicable to SNMP     * V3     */] [/*     * (non-Javadoc)     *      * @see     * org.snmp4j.agent.BaseAgent#addNotificationTargets(org.snmp4j.agent.mo     * .snmp.SnmpTargetMIB, org.snmp4j.agent.mo.snmp.SnmpNotificationMIB)     *      * Adds initial notification targets and filters.     */] [/*     * (non-Javadoc)     *      * @see     * org.snmp4j.agent.BaseAgent#addViews(org.snmp4j.agent.mo.snmp.VacmMIB)     *      * Minimal View based Access Control     *      * http://www.faqs.org/rfcs/rfc2575.html     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.agent.BaseAgent#addCommunities(org.snmp4j.agent.mo.snmp.     * SnmpCommunityMIB)     *      * The table of community strings configured in the SNMP engine's Local     * Configuration Datastore (LCD).     *      * We only configure one, "public".     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.agent.BaseAgent#initTransportMappings()     */] [/** * Start method invokes some initialization methods needed to start the * agent * * @throws IOException */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.agent.BaseAgent#sendColdStartNotification()     */] [/** * Send a Notification just before Shutdown the SNMP service. */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.agent.BaseAgent#stop()     */] <CODESPLIT> return monitor  return mib  return uptime ms  return uptime system time ms          non javadoc            see orgsnmp4jagentbaseagent registermanagedobjects            register additional managed objects agent s server              non javadoc            see orgsnmp4jagentbaseagent unregistermanagedobjects            unregister basic mib modules agent s moserver      param mogroup          non javadoc            see orgsnmp4jagentbaseagent addusmuser orgsnmp4jsecurityusm           adds initial users usm applicable snmp     v3              non javadoc            see     orgsnmp4jagentbaseagent addnotificationtargets orgsnmp4jagentmo     snmpsnmptargetmib  orgsnmp4jagentmosnmpsnmpnotificationmib           adds initial notification targets filters              non javadoc            see     orgsnmp4jagentbaseagent addviews orgsnmp4jagentmosnmpvacmmib           minimal view based access control          http   wwwfaqsorg rfcs rfc2575html              non javadoc            see orgsnmp4jagentbaseagent addcommunities orgsnmp4jagentmosnmp     snmpcommunitymib           table community strings configured snmp engine s local     configuration datastore  lcd           configure one   public               non javadoc            see orgsnmp4jagentbaseagent inittransportmappings       start method invokes initialization methods needed start agent  throws ioexception          non javadoc            see orgsnmp4jagentbaseagent sendcoldstartnotification       send a notification shutdown snmp service          non javadoc            see orgsnmp4jagentbaseagent stop       <CODESPLIT>120<CODESPLIT>false<CODESPLIT>WaarpTimeTicks<CODESPLIT>waarp time ticks<CODESPLIT>waarp time ticks<CODESPLIT>/** * Generic TimeTicks with update possibility for GoldenGate * * @author Frederic Bregier */<CODESPLIT>generic timeticks update possibility goldengate  author frederic bregier<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ setInternalValue ][ setInternalValue ][ getValue ][ clone ][ isDynamic ]<CODESPLIT><vazio>[ set internal value ][ set internal value ][ get value ][ clone ][ is dynamic ] <CODESPLIT><vazio>[ set internal set internal clone dynamic <CODESPLIT>[/** * Function to set the data before it is accessed by SNMP4J. This function * MUST call setValue(long) */] [/** * Function to set the data before it is accessed by SNMP4J. This function * MUST call setValue(long) */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.UnsignedInteger32#getValue()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.Gauge32#clone()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.AbstractVariable#isDynamic()     */] <CODESPLIT>function set data accessed snmp4j function call setvalue long  function set data accessed snmp4j function call setvalue long           non javadoc            see orgsnmp4jsmiunsignedinteger32 getvalue                non javadoc            see orgsnmp4jsmigauge32 clone                non javadoc            see orgsnmp4jsmiabstractvariable isdynamic       <CODESPLIT>121<CODESPLIT>false<CODESPLIT>WaarpUptime<CODESPLIT>waarp uptime<CODESPLIT>waarp uptime<CODESPLIT>/** * Specific Value for TimeTicks for Uptime * * @author Frederic Bregier */<CODESPLIT>specific timeticks uptime  author frederic bregier<CODESPLIT>type = null; <CODESPLIT> vazio type   <CODESPLIT> vazio type<CODESPLIT><VAZIO>[ setInternalValue ][ setInternalValue ][ clone ][ getValue ]<CODESPLIT><vazio>[ set internal value ][ set internal value ][ clone ][ get value ] <CODESPLIT><vazio>[ set internal set internal clone <CODESPLIT>[<VAZIO>] [<VAZIO>] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.TimeTicks#clone()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.UnsignedInteger32#getValue()     */] <CODESPLIT>         non javadoc            see orgsnmp4jsmitimeticks clone                non javadoc            see orgsnmp4jsmiunsignedinteger32 getvalue       <CODESPLIT>122<CODESPLIT>false<CODESPLIT>WaitingDialog<CODESPLIT>waiting dialog<CODESPLIT>waiting dialog<CODESPLIT>/** * @author Edgar */<CODESPLIT> author edgar<CODESPLIT>jLabel1; <CODESPLIT> vazio jlabel1   <CODESPLIT> vazio jlabel1<CODESPLIT><VAZIO>[ initComponents ]<CODESPLIT><vazio>[ init components ] <CODESPLIT><vazio>[ init components <CODESPLIT>[/** * This method is called from within the constructor to * initialize the form. * WARNING: Do NOT modify this code. The content of this method is * always regenerated by the Form Editor. */] <CODESPLIT>method called constructor initialize form warning  modify code content method regenerated form editor <CODESPLIT>123<CODESPLIT>false<CODESPLIT>WakeLock<CODESPLIT>wake lock<CODESPLIT>wake lock<CODESPLIT>/** * @author arif */<CODESPLIT> author arif<CODESPLIT>wakeLock; <CODESPLIT> vazio wakelock   <CODESPLIT> vazio wakelock<CODESPLIT><VAZIO>[ acquire ][ release ]<CODESPLIT><vazio>[ acquire ][ release ] <CODESPLIT><vazio>[ acquire release <CODESPLIT>[<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>124<CODESPLIT>false<CODESPLIT>WalkAction<CODESPLIT>walk action<CODESPLIT>walk action<CODESPLIT>/** * Author: Tom * Date: 11/06/12 * Time: 23:54 */<CODESPLIT>author  tom date  11 06 12 time  23 54<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ canDoAction ][ doAction ][ getCost ]<CODESPLIT><vazio>[ can do action ][ do action ][ get cost ] <CODESPLIT><vazio>[ action action cost <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>125<CODESPLIT>false<CODESPLIT>WalkGoal<CODESPLIT>walk goal<CODESPLIT>walk goal<CODESPLIT>/** * A goal for walking to a certain position without looking for enemies or * bushes * * @author Meldanor */<CODESPLIT>a goal walking a position enemies bushes  author meldanor<CODESPLIT>goal; player; path = null; <CODESPLIT> vazio goal  player path   <CODESPLIT> vazio goal  player path<CODESPLIT><VAZIO>[ isFinished ][ process ][ getPriority ][ calculateWay ]<CODESPLIT><vazio>[ is finished ][ process ][ get priority ][ calculate way ] <CODESPLIT><vazio>[ finished process priority calculate <CODESPLIT>[/** * @return True when the player has reached the goal point */] [/** * Walk to the next point on the path */] [/** * @return GoalPriority.LOW */] [/** * Calculate the way from the players position to the goal point <br> * When no way is found the goal is cancelled! * * @param apoLevel *            The level */] <CODESPLIT> return true player reached goal point walk point path  return goalprioritylow calculate players position goal point  br  found goal cancelled   param apolevel            level <CODESPLIT>126<CODESPLIT>false<CODESPLIT>Wall<CODESPLIT>wall<CODESPLIT>wall<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>area; y; side; x; width; height; bottom; <CODESPLIT> vazio area  y  side  x  width  height  bottom   <CODESPLIT> vazio area   side   width  height  bottom<CODESPLIT><VAZIO>[ getSide ][ getX ][ getWidth ][ getTopY ][ getBotY ][ getBot ][ getArea ]<CODESPLIT><vazio>[ get side ][ get x ][ get width ][ get top y ][ get bot y ][ get bot ][ get area ] <CODESPLIT><vazio>[ side width top bot bot area <CODESPLIT>[// retourne les cot?s du mur] [// retourne la coordonn?e horizontale du mur] [// retourne la largeur du mur] [// retourne la coordonn?e veticale en haut mur / en bas du mur] [<VAZIO>] [// retourne le dessous du mur] [// retourne le mur au complet] <CODESPLIT>    retourne les cot s du mur      retourne la coordonn e horizontale du mur      retourne la largeur du mur      retourne la coordonn e veticale en haut mur en bas du mur      retourne le dessous du mur      retourne le mur au complet  <CODESPLIT>127<CODESPLIT>false<CODESPLIT>WandCommand<CODESPLIT>wand command<CODESPLIT>wand command<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ runCommand ]<CODESPLIT><vazio>[ run command ] <CODESPLIT><vazio>[ run command <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>128<CODESPLIT>false<CODESPLIT>War<CODESPLIT>war<CODESPLIT>war<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>state = WarState.PENDING; unassignedPlayers = new LinkedList<Player>(); nodes = new ArrayList<WarNode>(); teams = new ArrayList<Team>(); allNodesConquered = false; ticksToConquer = 0; beginTime = null; endTime = null; loggedPlayers = new HashMap<String, Team>(); Contested = new Team("Contested"); PREP_TIME_IN_MINS = 15; <CODESPLIT> vazio state unassignedplayers nodes teams allnodesconquered tickstoconquer begintime endtime loggedplayers contested prep time in mins   <CODESPLIT> vazio state unassignedplayers nodes teams allnodesconquered tickstoconquer begintime endtime loggedplayers contested prep time mins<CODESPLIT><VAZIO>[ getNextWartime ][ warShouldEnd ][ getPlayerTeam ][ registerPlayer ][ unregisterPlayer ][ begin ][ assignPlayers ][ executeMaintenanceTick ][ postWarPendingNotice ][ postWarTeams ][ postWarScoreboard ][ executeWarTick ][ endWar ][ onEntityDamageByEntity ][ onPlayerQuit ][ onCommand ]<CODESPLIT><vazio>[ get next wartime ][ war should end ][ get player team ][ register player ][ unregister player ][ begin ][ assign players ][ execute maintenance tick ][ post war pending notice ][ post war teams ][ post war scoreboard ][ execute war tick ][ end war ][ on entity damage by entity ][ on player quit ][ on command ] <CODESPLIT><vazio>[ wartime war end player team register player unregister player begin assign players execute maintenance tick post war pending notice post war teams post war scoreboard execute war tick end war entity damage entity player quit command <CODESPLIT>[// static funcs] [<VAZIO>] [<VAZIO>] [// Methods --------------------] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT>    static funcs      methods                       <CODESPLIT>129<CODESPLIT>false<CODESPLIT>Warden<CODESPLIT>warden<CODESPLIT>warden<CODESPLIT>/** * @author Nathan Newman */<CODESPLIT> author nathan newman<CODESPLIT>SIZE = 100; cells = new int[SIZE]; prison = new AsynchCon[SIZE]; light = new LightBulb(false); TRIALS = 10; <CODESPLIT> vazio size cells prison light trials   <CODESPLIT> vazio size cells prison light trials<CODESPLIT><VAZIO>[ main ]<CODESPLIT><vazio>[ main ] <CODESPLIT><vazio>[ main <CODESPLIT>[/** * A method used to simulate possible strategies to the * "100 Prisoners and a Light Bulb Problem". In order to test any one * strategy (an implementation of prisoner) you just have to go to the four * instances within the program (marked by a single line comment) and * replace the current strategy with you own. The method runs the strategy a * set number of trials and then at the end gives you the average number of * days it took to complete (or fail) the strategy for all trials. * * @param args */] <CODESPLIT>a method simulate strategies  100 prisoners a light bulb problem  order test strategy  an implementation prisoner  instances program  marked a single line comment  replace current strategy own method runs strategy a set number trials end average number days complete  or fail  strategy trials  param args <CODESPLIT>130<CODESPLIT>false<CODESPLIT>WarDeployer<CODESPLIT>war deployer<CODESPLIT>war deployer<CODESPLIT>/** * OSGi WAR bundle deployer. Handles the installing and uninstalling of the OSGi * bundle as an web application and deals with any container specific * integration. * * <p/> Implementations are free to use specific environments for the actual * deployment process, such as Apache Tomcat, OSGi HttpService, Jetty or other * web containers. It is up to implementations to start the servers embedded or * to require their presence (though the latter is preferred). * * <p/>As the war listener handles the detection, start up and shutdown of the * bundles, the deployer should be concerned only with the deployment process of * the bundle. It is recommended to thrown exceptions (if any) unwrapped as the * extender will take care of logging and wrapping. * * @see ContextPathStrategy * * @author Costin Leau */<CODESPLIT>osgi war bundle deployer handles installing uninstalling osgi bundle web application deals container specific integration  p   implementations free specific environments actual deployment process  apache tomcat  osgi httpservice  jetty web containers implementations start servers embedded require presence  though preferred   p  as war listener handles detection  start shutdown bundles  deployer concerned deployment process bundle recommended thrown exceptions  if any  unwrapped extender care logging wrapping  see contextpathstrategy  author costin leau<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ deploy ]<CODESPLIT><vazio>[ deploy ] <CODESPLIT><vazio>[ deploy <CODESPLIT>[/** * Deploys the given bundle as a WAR using the given context path. * Traditionally, a WAR means the given bundle contains a * <code>WEB-INF/web.xml</code> file in its bundle space. However, * implementations can chose to create a <em>synthetic</em> WAR or use * other configuration files instead. * * @param bundle war bundle * @param contextPath the war context path * @return a war deployment for the given bundle * @throws OsgiWarDeploymentException if something went wrong during * deployment */] <CODESPLIT>deploys bundle a war context path traditionally  a war means bundle a  code web inf webxml  code  file bundle space however  implementations chose create a  em synthetic  em  war configuration files instead  param bundle war bundle  param contextpath war context path  return a war deployment bundle  throws osgiwardeploymentexception wrong deployment <CODESPLIT>131<CODESPLIT>false<CODESPLIT>WarDeployment<CODESPLIT>war deployment<CODESPLIT>war deployment<CODESPLIT>/** * An OSGi war deployment. * * <p/>Provides access to its context and control over its lifecycle. * * @see WarDeployer * * @author Costin Leau */<CODESPLIT>osgi war deployment  p  provides access context control lifecycle  see wardeployer  author costin leau<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ getDeploymentContext ][ isActive ][ undeploy ]<CODESPLIT><vazio>[ get deployment context ][ is active ][ undeploy ] <CODESPLIT><vazio>[ deployment context active undeploy <CODESPLIT>[/** * Returns the context associated with this deployer. Clients should use * this interface for interacting with a war deployment as it gives access * to its context without jeopardizing its lifecycle. * * @return context associated with this deployer. */] [/** * Indicates if the current deployment is active (still deployed) or not. * * @return false if the deployment has been undeployed, true otherwise. */] [/** * Undeploys the current deployment. If the deployment has been already * undeployed, this method simply returns. * * @throws OsgiWarDeploymentException if something went wrong during * undeployment */] <CODESPLIT>returns context deployer clients interface interacting a war deployment access context jeopardizing lifecycle  return context deployer current deployment active  still deployed  not  return false deployment undeployed  true otherwise undeploys current deployment deployment undeployed  method simply returns  throws osgiwardeploymentexception wrong undeployment <CODESPLIT>132<CODESPLIT>false<CODESPLIT>WarDeployment<CODESPLIT>war deployment<CODESPLIT>war deployment<CODESPLIT>/** * @author Ryan Brainard */<CODESPLIT> author ryan brainard<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ getAppName ][ getApiKey ][ getWarPath ]<CODESPLIT><vazio>[ get app name ][ get api key ][ get war path ] <CODESPLIT><vazio>[ app name api key war path <CODESPLIT>[// Overriding and delegating to parent because Jelly only looks at concrete class when rendering views] [// Overriding and delegating to parent because Jelly only looks at concrete class when rendering views] [<VAZIO>] <CODESPLIT>    overriding delegating parent jelly concrete class rendering views      overriding delegating parent jelly concrete class rendering views  <CODESPLIT>133<CODESPLIT>false<CODESPLIT>WarDeploymentContext<CODESPLIT>war deployment context<CODESPLIT>war deployment context<CODESPLIT>/** * Context associated with a war deployment. Provides access to various war * properties such as the owning bundle, context path or associated servlet * context. * * @see WarDeployment * @see ServletContext * * @author Costin Leau */<CODESPLIT>context a war deployment access war properties owning bundle  context path servlet context  see wardeployment  see servletcontext  author costin leau<CODESPLIT>OSGI_BUNDLE_CONTEXT_ATTRIBUTE = "org.springframework.osgi.web." + BundleContext.class.getName(); <CODESPLIT> vazio osgi bundle context attribute   <CODESPLIT> vazio osgi bundle context attribute<CODESPLIT><VAZIO>[ getBundle ][ getContextPath ][ getServletContext ]<CODESPLIT><vazio>[ get bundle ][ get context path ][ get servlet context ] <CODESPLIT><vazio>[ bundle context path servlet context <CODESPLIT>[/** * Returns the bundle associated with this war deployment. * * @return bundle associated with this war deployment */] [/** * Returns the context path under which this war deployment resides. * * @return the context path for this war deployment */] [/** * Returns the ServletContext used by the war backing this deployment. * * @return the servlet context associated with this war */] <CODESPLIT>returns bundle war deployment  return bundle war deployment returns context path war deployment resides  return context path war deployment returns servletcontext war backing deployment  return servlet context war <CODESPLIT>134<CODESPLIT>false<CODESPLIT>WarmUpEntry<CODESPLIT>warm up entry<CODESPLIT>warm entry<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>player; expiry; x; y; z; pitch; yaw; world; cost; <CODESPLIT> vazio player  expiry  x  y  z  pitch  yaw  world  cost   <CODESPLIT> vazio player  expiry     pitch  yaw  world  cost<CODESPLIT><VAZIO>[ getPlayer ][ getExpiry ][ setWorld ][ getWorld ][ setX ][ getX ][ setY ][ getY ][ setZ ][ getZ ][ setPitch ][ getPitch ][ setYaw ][ getYaw ][ setLocation ][ getLocation ][ getCost ][ setCost ]<CODESPLIT><vazio>[ get player ][ get expiry ][ set world ][ get world ][ set x ][ get x ][ set y ][ get y ][ set z ][ get z ][ set pitch ][ get pitch ][ set yaw ][ get yaw ][ set location ][ get location ][ get cost ][ set cost ] <CODESPLIT><vazio>[ player expiry set world world set set set set pitch pitch set yaw yaw set location location cost set cost <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>135<CODESPLIT>false<CODESPLIT>WarmUpTask<CODESPLIT>warm up task<CODESPLIT>warm task<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>plugin; warmup; taskId; <CODESPLIT> vazio plugin  warmup  taskid   <CODESPLIT> vazio plugin  warmup  taskid<CODESPLIT><VAZIO>[ cancelWarmUp ][ getWarmup ][ run ]<CODESPLIT><vazio>[ cancel warm up ][ get warmup ][ run ] <CODESPLIT><vazio>[ cancel warm warmup run <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>136<CODESPLIT>false<CODESPLIT>Warn<CODESPLIT>warn<CODESPLIT>warn<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>versionCheck = true; name = "Warn"; version = 5; delay = 10; running = false; blockCommands = false; blockChat = false; blockMove = true; warnings = new HashMap<String, WarnData>(); log = Logger.getLogger("Minecraft"); <CODESPLIT> vazio versioncheck name version delay running blockcommands blockchat blockmove warnings log   <CODESPLIT> vazio versioncheck name version delay running blockcommands blockchat blockmove warnings log<CODESPLIT><VAZIO>[ startTimer ][ stopTimer ][ sendWarnings ][ enable ][ disable ][ initialize ][ sendWarning ][ ackWarning ]<CODESPLIT><vazio>[ start timer ][ stop timer ][ send warnings ][ enable ][ disable ][ initialize ][ send warning ][ ack warning ] <CODESPLIT><vazio>[ start timer stop timer send warnings enable disable initialize send warning ack warning <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>137<CODESPLIT>false<CODESPLIT>WarnData<CODESPLIT>warn data<CODESPLIT>warn data<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>from; to; message; acknowledged; <CODESPLIT> vazio from  to  message  acknowledged   <CODESPLIT> vazio   message  acknowledged<CODESPLIT><VAZIO>[ getFrom ][ getMessage ][ toString ]<CODESPLIT><vazio>[ get from ][ get message ][ to string ] <CODESPLIT><vazio>[ message string <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>138<CODESPLIT>false<CODESPLIT>WarningsNewVersusFixedGraphPortlet<CODESPLIT>warnings new versus fixed graph portlet<CODESPLIT>warnings versus fixed graph portlet<CODESPLIT>/** * A portlet that shows the warnings trend graph of fixed versus new warnings. * * @author Ulli Hafner * @since 3.0 */<CODESPLIT>a portlet shows warnings trend graph fixed versus warnings  author ulli hafner  since 30<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ getAction ][ getPluginName ][ getGraphType ]<CODESPLIT><vazio>[ get action ][ get plugin name ][ get graph type ] <CODESPLIT><vazio>[ action plugin name graph type <CODESPLIT>[/** * {@inheritDoc} */] [/** * {@inheritDoc} */] [/** * {@inheritDoc} */] <CODESPLIT>  inheritdoc    inheritdoc    inheritdoc  <CODESPLIT>139<CODESPLIT>true<CODESPLIT>ClientDto<CODESPLIT>client dto<CODESPLIT>client dto<CODESPLIT>/** * DTO sent to/from server. */<CODESPLIT>dto to from server<CODESPLIT>id; name; <CODESPLIT> vazio id  name   <CODESPLIT> vazio id  name<CODESPLIT><VAZIO>[ toModel ]<CODESPLIT><vazio>[ to model ] <CODESPLIT><vazio>[ model <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>140<CODESPLIT>true<CODESPLIT>Cliente<CODESPLIT>cliente<CODESPLIT>cliente<CODESPLIT>/** * @author edgar */<CODESPLIT> author edgar<CODESPLIT>serialVersionUID = 1L; id; nombre; apellido; cedula; telefono; prestamos; <CODESPLIT> vazio serialversionuid  id  nombre  apellido  cedula  telefono  prestamos   <CODESPLIT> vazio serialversionuid  id  nombre  apellido  cedula  telefono  prestamos<CODESPLIT><VAZIO>[ getPrestamos ][ setPrestamos ][ getApellido ][ setApellido ][ getCedula ][ setCedula ][ getNombre ][ setNombre ][ getTelefono ][ setTelefono ][ getId ][ setId ][ hashCode ][ equals ][ toString ]<CODESPLIT><vazio>[ get prestamos ][ set prestamos ][ get apellido ][ set apellido ][ get cedula ][ set cedula ][ get nombre ][ set nombre ][ get telefono ][ set telefono ][ get id ][ set id ][ hash code ][ equals ][ to string ] <CODESPLIT><vazio>[ prestamos set prestamos apellido set apellido cedula set cedula nombre set nombre telefono set telefono id set id hash code equals string <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>141<CODESPLIT>true<CODESPLIT>Contact<CODESPLIT>contact<CODESPLIT>contact<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>guid; username; title; psm; status; <CODESPLIT> vazio guid  username  title  psm  status   <CODESPLIT> vazio guid  username  title  psm  status<CODESPLIT><VAZIO>[ getGuid ][ getUsername ][ getTitle ][ getPSM ][ getStatus ][ setTitle ][ setPSM ][ setStatus ][ toString ]<CODESPLIT><vazio>[ get guid ][ get username ][ get title ][ get psm ][ get status ][ set title ][ set psm ][ set status ][ to string ] <CODESPLIT><vazio>[ guid username title psm status set title set psm set status string <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [/* Possible combination     * <STATUS>USERNAME     * <STATUS>USERNAME - PSM     * <STATUS>TITLE     * <STATUS>TITLE - PSM     */] <CODESPLIT>    combination      status username      status username psm      status title      status title psm     <CODESPLIT>142<CODESPLIT>true<CODESPLIT>Contact<CODESPLIT>contact<CODESPLIT>contact<CODESPLIT>/** * @author marcbaechinger */<CODESPLIT> author marcbaechinger<CODESPLIT>id; name; <CODESPLIT> vazio id  name   <CODESPLIT> vazio id  name<CODESPLIT><VAZIO>[ getName ][ setName ][ getId ][ setId ]<CODESPLIT><vazio>[ get name ][ set name ][ get id ][ set id ] <CODESPLIT><vazio>[ name set name id set id <CODESPLIT>[/** * Get the value of name * * @return the value of name */] [/** * Set the value of name * * @param name new value of name */] [/** * Get the value of id * * @return the value of id */] [/** * Set the value of id * * @param id new value of id */] <CODESPLIT>name  return name set name  param name name id  return id set id  param id id <CODESPLIT>143<CODESPLIT>true<CODESPLIT>Contact<CODESPLIT>contact<CODESPLIT>contact<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>serialVersionUID = 1L; contactID = 0; firstName = null; lastName = null; phoneNumber = null; email = null; mailURL = null; pin = null; <CODESPLIT> vazio serialversionuid contactid firstname lastname phonenumber email mailurl pin   <CODESPLIT> vazio serialversionuid contactid firstname lastname phonenumber email mailurl pin<CODESPLIT><VAZIO>[ getContactID ][ getFirstName ][ getLastName ][ getPhoneNumber ][ getEmail ][ getMailURL ][ setContactID ][ setFirstName ][ setLastName ][ setPhoneNumber ][ setEmail ][ setMailURL ][ getPin ][ setPin ]<CODESPLIT><vazio>[ get contact id ][ get first name ][ get last name ][ get phone number ][ get email ][ get mail url ][ set contact id ][ set first name ][ set last name ][ set phone number ][ set email ][ set mail url ][ get pin ][ set pin ] <CODESPLIT><vazio>[ contact id first name last name phone number email mail url set contact id set first name set last name set phone number set email set mail url pin set pin <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>144<CODESPLIT>true<CODESPLIT>Contact<CODESPLIT>contact<CODESPLIT>contact<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>user; nick; lists; groups; <CODESPLIT> vazio user  nick  lists  groups   <CODESPLIT> vazio user  nick  lists  groups<CODESPLIT><VAZIO>[ getUser ][ setUser ][ getNick ][ setNick ][ getLists ][ setLists ][ getGroups ][ setGroups ]<CODESPLIT><vazio>[ get user ][ set user ][ get nick ][ set nick ][ get lists ][ set lists ][ get groups ][ set groups ] <CODESPLIT><vazio>[ user set user nick set nick lists set lists groups set groups <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>145<CODESPLIT>true<CODESPLIT>Customer<CODESPLIT>customer<CODESPLIT>customer<CODESPLIT>/** * Simple customer entity * * @author Christian Sadilek <csadilek@redhat.com> */<CODESPLIT>simple customer entity  author christian sadilek  csadilek redhatcom <CODESPLIT>serialVersionUID = 1L; id; firstName; lastName; postalCode; lastChanged; <CODESPLIT> vazio serialversionuid  id  firstname  lastname  postalcode  lastchanged   <CODESPLIT> vazio serialversionuid  id  firstname  lastname  postalcode  lastchanged<CODESPLIT><VAZIO>[ getId ][ setId ][ getFirstName ][ setFirstName ][ getLastName ][ setLastName ][ getLastChanged ][ setLastChanged ][ getPostalCode ][ setPostalCode ][ toString ][ compareTo ]<CODESPLIT><vazio>[ get id ][ set id ][ get first name ][ set first name ][ get last name ][ set last name ][ get last changed ][ set last changed ][ get postal code ][ set postal code ][ to string ][ compare to ] <CODESPLIT><vazio>[ id set id first name set first name last name set last name last changed set last changed postal code set postal code string compare <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>146<CODESPLIT>true<CODESPLIT>Driver<CODESPLIT>driver<CODESPLIT>driver<CODESPLIT>/** * A Formula 1 driver. */<CODESPLIT>a formula 1 driver<CODESPLIT>forename; lastName; skillLevel; teamName; points; <CODESPLIT> vazio forename  lastname  skilllevel  teamname  points   <CODESPLIT> vazio forename  lastname  skilllevel  teamname  points<CODESPLIT><VAZIO>[ getForename ][ getLastName ][ getTeamName ][ getSkillLevel ][ getPoints ][ addPoints ][ toString ][ copy ]<CODESPLIT><vazio>[ get forename ][ get last name ][ get team name ][ get skill level ][ get points ][ add points ][ to string ][ copy ] <CODESPLIT><vazio>[ forename last name team name skill level points add points string copy <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>147<CODESPLIT>true<CODESPLIT>Employee<CODESPLIT>employee<CODESPLIT>employee<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>name; designation; <CODESPLIT> vazio name  designation   <CODESPLIT> vazio name  designation<CODESPLIT><VAZIO>[ getDesignation ][ setDesignation ][ getName ][ setName ][ clone ]<CODESPLIT><vazio>[ get designation ][ set designation ][ get name ][ set name ][ clone ] <CODESPLIT><vazio>[ designation set designation name set name clone <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>148<CODESPLIT>true<CODESPLIT>EmployeeDto<CODESPLIT>employee dto<CODESPLIT>employee dto<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>name; description; <CODESPLIT> vazio name  description   <CODESPLIT> vazio name  description<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>149<CODESPLIT>true<CODESPLIT>FilesClient<CODESPLIT>files client<CODESPLIT>files client<CODESPLIT>** * A client for Cloud Files.  Here follows a basic example of logging in, creating a container and an * object, retrieving the object, and then deleting both the object and container.  For more examples, * see the code in com.rackspacecloud.client.cloudfiles.sample, which contains a series of examples. * * <pre> * *  //  Create the client object for username "jdoe", password "johnsdogsname". * 	FilesClient myClient = FilesClient("jdoe", "johnsdogsname"); * *  // Log in (<code>login()</code> will return false if the login was unsuccessful. *  assert(myClient.login()); * *  // Make sure there are no containers in the account *  assert(myClient.listContainers.length() == 0); * *  // Create the container *  assert(myClient.createContainer("myContainer")); * *  // Now we should have one *  assert(myClient.listContainers.length() == 1); * *  // Upload the file "alpaca.jpg" *  assert(myClient.storeObject("myContainer", new File("alapca.jpg"), "image/jpeg")); * *  // Download "alpaca.jpg" *<CODESPLIT> client cloud files  a basic logging in  creating a container object  retrieving object  deleting object container  examples  code comrackspacecloudclientcloudfilessample  a series examples  pre    create client object username  jdoe   password  johnsdogsname   filesclient myclient filesclient  jdoe    johnsdogsname     log   code login    code  return false login unsuccessful  assert myclientlogin      make containers account  assert myclientlistcontainerslength      0    create container  assert myclientcreatecontainer  mycontainer       assert myclientlistcontainerslength      1    upload file  alpacajpg   assert myclientstoreobject  mycontainer   file  alapcajpg     image jpeg      download  alpacajpg   filesobject obj myclientgetobject  mycontainer    alpacajpg     byte data   objgetobject     clean ourselves  note   order important  delete non empty containers  assert myclientdeleteobject  mycontainer    alpacajpg      assert myclientdeletecontainer  mycontainer      pre   see c<CODESPLIT>VERSION = "v1"; username = null; password = null; account = null; authenticationURL; connectionTimeOut; storageURL = null; cdnManagementURL = null; authToken = null; isLoggedin = false; useETag = true; snet = false; snetAddr = "https://snet-"; client = null; logger = Logger.getLogger(FilesClient.class); <CODESPLIT> vazio version username password account  authenticationurl  connectiontimeout storageurl cdnmanagementurl authtoken isloggedin useetag snet snetaddr client logger   <CODESPLIT> vazio version username password account  authenticationurl  connectiontimeout storageurl cdnmanagementurl authtoken isloggedin useetag snet snetaddr client logger<CODESPLIT><VAZIO>[ getAccount ][ setAccount ][ login ][ login ][ listContainersInfo ][ listContainersInfo ][ listContainersInfo ][ listContainers ][ listContainers ][ listContainers ][ listObjectsStartingWith ][ listObjectsStartingWith ][ listObjects ][ listObjects ][ listObjects ][ listObjects ][ listObjects ][ listObjects ][ listObjects ][ listObjects ][ containerExists ][ getAccountInfo ][ getContainerInfo ][ createContainer ][ deleteContainer ][ cdnEnableContainer ][ cdnUpdateContainer ][ cdnUpdateContainer ][ getCDNContainerInfo ][ isCDNEnabled ][ createPath ][ createFullPath ][ listCdnContainers ][ listCdnContainers ][ listCdnContainers ][ purgeCDNContainer ][ purgeCDNObject ][ listCdnContainerInfo ][ listCdnContainerInfo ][ listCdnContainerInfo ][ createManifestObject ][ createManifestObject ][ createManifestObject ][ storeObjectAs ][ storeObjectAs ][ storeObjectAs ][ storeObjectAs ][ storeObject ][ storeObject ][ storeObject ][ storeStreamedObject ][ storeObjectAs ][ copyObject ][ deleteObject ][ getObjectMetaData ][ getObject ][ getObjectAsStream ][ getObjectAsRangedStream ][ writeInputStreamToFile ][ inputStreamToString ][ md5Sum ][ md5Sum ][ sanitizeForURI ][ sanitizeAndPreserveSlashes ][ unencodeURI ][ getConnectionTimeOut ][ setConnectionTimeOut ][ getStorageURL ][ getStorageToken ][ getAuthToken ][ isLoggedin ][ getUserName ][ setUserName ][ getPassword ][ setPassword ][ getAuthenticationURL ][ setAuthenticationURL ][ getUseETag ][ setUseETag ][ setUserAgent ][ getUserAgent ][ isValidContainerName ][ isValidObjectName ][ getCdnManagementURL ][ updateObjectManifest ][ updateObjectMetadata ][ updateObjectMetadataAndManifest ][ makeURI ][ useSnet ][ usePublic ][ usingSnet ][ envSnet ]<CODESPLIT><vazio>[ get account ][ set account ][ login ][ login ][ list containers info ][ list containers info ][ list containers info ][ list containers ][ list containers ][ list containers ][ list objects starting with ][ list objects starting with ][ list objects ][ list objects ][ list objects ][ list objects ][ list objects ][ list objects ][ list objects ][ list objects ][ container exists ][ get account info ][ get container info ][ create container ][ delete container ][ cdn enable container ][ cdn update container ][ cdn update container ][ get cdncontainer info ][ is cdnenabled ][ create path ][ create full path ][ list cdn containers ][ list cdn containers ][ list cdn containers ][ purge cdncontainer ][ purge cdnobject ][ list cdn container info ][ list cdn container info ][ list cdn container info ][ create manifest object ][ create manifest object ][ create manifest object ][ store object as ][ store object as ][ store object as ][ store object as ][ store object ][ store object ][ store object ][ store streamed object ][ store object as ][ copy object ][ delete object ][ get object meta data ][ get object ][ get object as stream ][ get object as ranged stream ][ write input stream to file ][ input stream to string ][ md5sum ][ md5sum ][ sanitize for uri ][ sanitize and preserve slashes ][ unencode uri ][ get connection time out ][ set connection time out ][ get storage url ][ get storage token ][ get auth token ][ is loggedin ][ get user name ][ set user name ][ get password ][ set password ][ get authentication url ][ set authentication url ][ get use etag ][ set use etag ][ set user agent ][ get user agent ][ is valid container name ][ is valid object name ][ get cdn management url ][ update object manifest ][ update object metadata ][ update object metadata and manifest ][ make uri ][ use snet ][ use public ][ using snet ][ env snet ] <CODESPLIT><vazio>[ account set account login login list containers info list containers info list containers info list containers list containers list containers list objects starting list objects starting list objects list objects list objects list objects list objects list objects list objects list objects container exists account info container info create container delete container cdn enable container cdn update container cdn update container cdncontainer info cdnenabled create path create full path list cdn containers list cdn containers list cdn containers purge cdncontainer purge cdnobject list cdn container info list cdn container info list cdn container info create manifest object create manifest object create manifest object store object store object store object store object store object store object store object store streamed object store object copy object delete object object meta data object object stream object ranged stream write input stream file input stream string md5sum md5sum sanitize uri sanitize preserve slashes unencode uri connection time set connection time storage url storage token auth token loggedin user name set user name password set password authentication url set authentication url etag set etag set user agent user agent valid container name valid object name cdn management url update object manifest update object metadata update object metadata manifest make uri snet public snet env snet <CODESPLIT>[/** * Returns the Account associated with the URL * * @return The account name */] [/** * Set the Account value and reassemble the Authentication URL. * * @param account */] [/** * Log in to CloudFiles.  This method performs the authentication and sets up the client's internal state. * * @return true if the login was successful, false otherwise. * * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol */] [/** * Log in to CloudFiles.  This method performs the authentication and sets up the client's internal state. * * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol */] [/** * List all of the containers available in an account, ordered by container name. * * @return null if the user is not logged in or the Account is not found.  A List of FSContainers with all of the containers in the account. *         if there are no containers in the account, the list will be zero length. * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the containers available in an account, ordered by container name. * * @param limit The maximum number of containers to return.  -1 returns an unlimited number. * * @return null if the user is not logged in or the Account is not found.  A List of FSContainers with all of the containers in the account. *         if there are no containers in the account, the list will be zero length. * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the containers available in an account, ordered by container name. * *  @param limit The maximum number of containers to return.  -1 returns an unlimited number. *  @param marker Return containers that occur after this lexicographically. * *  @return null if the user is not logged in or the Account is not found.  A List of FSContainers with all of the containers in the account. *         if there are no containers in the account, the list will be zero length. * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the containers available in an account. * * @return null if the user is not logged in or the Account is not found.  A List of FilesContainer with all of the containers in the account. *         if there are no containers in the account, the list will be zero length. * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the containers available in an account. * * @param limit The maximum number of containers to return.  -1 denotes no limit. * * @return null if the user is not logged in or the Account is not found.  A List of FilesContainer with all of the containers in the account. *         if there are no containers in the account, the list will be zero length. * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the containers available in an account. * * @param limit The maximum number of containers to return.  -1 denotes no limit. * @param marker Only return containers after this container.  Null denotes starting at the beginning (lexicographically). * * @return A List of FilesContainer with all of the containers in the account. *         if there are no containers in the account, the list will be zero length. * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List all of the objects in a container with the given starting string. * * @param container  The container name * @param startsWith The string to start with * @param path Only look for objects in this path * @param limit Return at most <code>limit</code> objects * @param marker Returns objects lexicographically greater than <code>marker</code>.  Used in conjunction with <code>limit</code> to paginate the list. * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List all of the objects in a container with the given starting string. * * @param container  The container name * @param startsWith The string to start with * @param path Only look for objects in this path * @param limit Return at most <code>limit</code> objects * @param marker Returns objects lexicographically greater than <code>marker</code>.  Used in conjunction with <code>limit</code> to paginate the list. * @param delimter Use this argument as the delimiter that separates "directories" * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the objects in a container in lexicographic order. * * @param container  The container name * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the objects in a container in lexicographic order. * * @param container  The container name * @param delimter Use this argument as the delimiter that separates "directories" * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the objects in a container in lexicographic order. * * @param container  The container name * @param limit Return at most <code>limit</code> objects * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the objects in a container in lexicographic order. * * @param container  The container name * @param path Only look for objects in this path * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. */] [/** * List the objects in a container in lexicographic order. * * @param container  The container name * @param path Only look for objects in this path * @param delimter Use this argument as the delimiter that separates "directories" * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. */] [/** * List the objects in a container in lexicographic order. * * @param container  The container name * @param path Only look for objects in this path * @param limit Return at most <code>limit</code> objects * @param marker Returns objects lexicographically greater than <code>marker</code>.  Used in conjunction with <code>limit</code> to paginate the list. * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * List the objects in a container in lexicographic order. * * @param container  The container name * @param path Only look for objects in this path * @param limit Return at most <code>limit</code> objects * @param marker Returns objects lexicographically greater than <code>marker</code>.  Used in conjunction with <code>limit</code> to paginate the list. * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. */] [/** * List the objects in a container in lexicographic order. * * @param container  The container name * @param limit Return at most <code>limit</code> objects * @param marker Returns objects lexicographically greater than <code>marker</code>.  Used in conjunction with <code>limit</code> to paginate the list. * * @return A list of FilesObjects starting with the given string * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * Convenience method to test for the existence of a container in Cloud Files. * * @param container * @return true if the container exists.  false otherwise. * @throws IOException * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol */] [/** * Gets information for the given account. * * @return The FilesAccountInfo with information about the number of containers and number of bytes used *         by the given account. * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was another error in the request to the server. * @throws FilesAuthorizationException The client's login was invalid. */] [/** * Get basic information on a container (number of items and the total size). * * @param container The container to get information for * @return ContainerInfo object of the container is present or null if its not present * @throws IOException  There was a socket level exception while talking to CloudFiles * @throws HttpException There was an protocol level exception while talking to Cloudfiles * @throws FilesNotFoundException The container was not found * @throws FilesAuthorizationException The client was not logged in or the log in expired. */] [/** * Creates a container * * @param name The name of the container to be created * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesAuthorizationException The client was not property logged in * @throws FilesInvalidNameException The container name was invalid */] [/** * Deletes a container * * @param name  The name of the container * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesAuthorizationException The user is not Logged in * @throws FilesInvalidNameException   The container name is invalid * @throws FilesNotFoundException      The container doesn't exist * @throws FilesContainerNotEmptyException The container was not empty */] [/** * Enables access of files in this container via the Content Delivery Network. * * @param name The name of the container to enable * @return The CDN Url of the container * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was an error talking to the CDN Server. */] [<VAZIO>] [/*     * @param referrerAcl Unused for now     * @param userAgentACL Unused for now     */] [/** * Gets current CDN sharing status of the container * * @param name The name of the container to enable * @return Information on the container * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was an error talking to the CloudFiles Server * @throws FilesNotFoundException The Container has never been CDN enabled */] [/** * Gets current CDN sharing status of the container * * @param name The name of the container to enable * @return Information on the container * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException There was an error talking to the CloudFiles Server * @throws FilesNotFoundException The Container has never been CDN enabled */] [/** * Creates a path (but not any of the sub portions of the path) * * @param container The name of the container. * @param path  The name of the Path * @throws HttpException There was an error at the protocol layer while talking to CloudFiles * @throws IOException There was an error at the socket layer while talking to CloudFiles * @throws FilesException There was another error while taking to the CloudFiles server */] [/** * Create all of the path elements for the entire tree for a given path.  Thus, <code>createFullPath("myContainer", "foo/bar/baz")</code> * creates the paths "foo", "foo/bar" and "foo/bar/baz". * * @param container The name of the container * @param path The full name of the path * @throws HttpException There was an error at the protocol layer while talking to CloudFiles * @throws IOException There was an error at the socket layer while talking to CloudFiles * @throws FilesException There was another error while taking to the CloudFiles server */] [/** * Gets the names of all of the containers associated with this account. * * @param limit The maximum number of container names to return * @return A list of container names * * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Gets the names of all of the containers associated with this account. * * @return A list of container names * * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Gets the names of all of the containers associated with this account. * * @param limit The maximum number of container names to return * @param marker All of the results will come after <code>marker</code> lexicographically. * @return A list of container names * * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Purges all items from a given container from the CDN * * @param container The name of the container * @param emailAddresses An optional comma separated list of email addresses to be notified when the purge is complete. *                       <code>null</code> if desired. * @throws IOException Error talking to the cdn management server * @throws HttpException Error with HTTP * @throws FilesAuthorizationException Log in was not successful, or account is suspended * @throws FilesException Other error */] [/** * Purges all items from a given container from the CDN * * @param container The name of the container * @param object The name of the object * @param emailAddresses An optional comma separated list of email addresses to be notified when the purge is complete. *                       <code>null</code> if desired. * @throws IOException Error talking to the cdn management server * @throws HttpException Error with HTTP * @throws FilesAuthorizationException Log in was not successful, or account is suspended * @throws FilesException Other error */] [/** * Gets list of all of the containers associated with this account. * * @return A list of containers * * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Gets list of all of the containers associated with this account. * * @param limit The maximum number of container names to return * @return A list of containers * * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Gets list of all of the containers associated with this account. * * @param limit The maximum number of container names to return * @param marker All of the names will come after <code>marker</code> lexicographically. * @return A list of containers * * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Create a manifest on the server, including metadata * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @param manifest    Set manifest content here * @param callback    The object to which any callbacks will be sent (null if you don't want callbacks) * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Create a manifest on the server, including metadata * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @param manifest    Set manifest content here * @param metadata    A map with the metadata as key names and values as the metadata values * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Create a manifest on the server, including metadata * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @param manifest    Set manifest content here * @param metadata    A map with the metadata as key names and values as the metadata values * @param callback    The object to which any callbacks will be sent (null if you don't want callbacks) * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Store a file on the server * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @return The ETAG if the save was successful, null otherwise * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Store a file on the server * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @return The ETAG if the save was successful, null otherwise * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Store a file on the server, including metadata * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @param metadata    A map with the metadata as key names and values as the metadata values * @return The ETAG if the save was successful, null otherwise * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesAuthorizationException */] [/** * Store a file on the server, including metadata * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @param metadata    A map with the metadata as key names and values as the metadata values * @param metadata    The callback object that will be called as the data is sent * @return The ETAG if the save was successful, null otherwise * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Copies the file to Cloud Files, keeping the original file name in Cloud Files. * * @param container    The name of the container to place the file in * @param obj          The File to transfer * @param contentType  The file's MIME type * @return The ETAG if the save was successful, null otherwise * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Store a file on the server, including metadata * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @param metadata    A map with the metadata as key names and values as the metadata values * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Store a file on the server, including metadata * * @param container   The name of the container * @param obj         The File containing the file to copy over * @param contentType The MIME type of the file * @param name        The name of the file on the server * @param metadata    A map with the metadata as key names and values as the metadata values * @param callback    The object to which any callbacks will be sent (null if you don't want callbacks) * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Store a file on the server, including metadata, with the contents coming from an input stream.  This allows you to * not know the entire length of your content when you start to write it.  Nor do you have to hold it entirely in memory * at the same time. * * @param container   The name of the container * @param data        Any object that implements InputStream * @param contentType The MIME type of the file * @param name        The name of the file on the server * @param metadata    A map with the metadata as key names and values as the metadata values * @param callback    The object to which any callbacks will be sent (null if you don't want callbacks) * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * @param container The name of the container * @param name The name of the object * @param entity The name of the request entity (make sure to set the Content-Type * @param metadata The metadata for the object * @param md5sum The 32 character hex encoded MD5 sum of the data * @return The ETAG if the save was successful, null otherwise * @throws IOException There was a socket level exception talking to CloudFiles * @throws HttpException There was a protocol level error talking to CloudFiles * @throws FilesException There was an error talking to CloudFiles. */] [/** * This method copies the object found in the source container with the * source object name to the destination container with the destination * object name. * @param sourceContainer of object to copy * @param sourceObjName of object to copy * @param destContainer where object copy will be copied * @param destObjName of object copy * @return ETAG if successful, else null * @throws IOException indicates a socket level error talking to CloudFiles * @throws HttpException indicates a protocol level error talking to CloudFiles * @throws FilesException indicates an error talking to CloudFiles */] [/** * Delete the given object from it's container. * * @param container  The container name * @param objName    The object name * @return FilesConstants.OBJECT_DELETED * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesException */] [/** * Get an object's metadata * * @param container The name of the container * @param objName   The name of the object * @return The object's metadata * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesAuthorizationException The Client's Login was invalid. * @throws FilesInvalidNameException The container or object name was not valid * @throws FilesNotFoundException The file was not found */] [/** * Get the content of the given object * * @param container  The name of the container * @param objName    The name of the object * @return The content of the object * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesAuthorizationException * @throws FilesInvalidNameException * @throws FilesNotFoundException */] [/** * Get's the given object's content as a stream * * @param container  The name of the container * @param objName    The name of the object * @return An input stream that will give the objects content when read from. * @throws IOException   There was an IO error doing network communication * @throws HttpException There was an error with the http protocol * @throws FilesAuthorizationException * @throws FilesNotFoundException The container does not exist * @throws FilesInvalidNameException */] [<VAZIO>] [/** * Utility function to write an InputStream to a file * * @param is * @param f * @throws IOException */] [/** * Reads an input stream into a stream * * @param is The input stream * @return The contents of the stream stored in a string. * @throws IOException */] [/** * Calculates the MD5 checksum of a file, returned as a hex encoded string * * @param f The file * @return The MD5 checksum, as a base 16 encoded string * @throws IOException */] [/** * Calculates the MD5 checksum of an array of data * * @param data The data to checksum * @return The checksum, represented as a base 16 encoded string. * @throws IOException */] [/** * Encode any unicode characters that will cause us problems. * * @param str * @return The string encoded for a URI */] [<VAZIO>] [<VAZIO>] [/** * @return The connection timeout used for communicating with the server (in milliseconds) */] [/** * The timeout we will use for communicating with the server (in milliseconds) * * @param connectionTimeOut The new timeout for this connection */] [/** * @return The storage URL on the other end of the ReST api */] [/** * @return Get's our storage token. */] [/** * @return Get's our storage token. */] [/** * Has this instance of the client authenticated itself?  Note, this does not mean that a call * right now will work, if the auth token has timed out, you will need to re-auth. * * @return True if we logged in, false otherwise. */] [/** * The username we are logged in with. * * @return The username */] [/** * Set's the username for this client. Note, setting this after login has no real impact unless the <code>login()</code> * method is called again. * * @param userName the username */] [/** * The password the client will use for the login. * * @return The password */] [/** * Set's the password for this client. Note, setting this after login has no real impact unless the <code>login()</code> * method is called again. * * @param password The new password */] [/** * The URL we will use for Authentication * * @return The URL (represented as a string) */] [/** * Changes the URL of the authentication service.  Note, if one is logged in, this doesn't have an effect unless one calls login again. * * @param authenticationURL The new authentication URL */] [/** * @return the useETag */] [/** * @param useETag the useETag to set */] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [/** * @return the cdnManagementURL */] [/** * @param config */] [/** * @param config */] [/** * @param config */] [<VAZIO>] [/*		 * 		 *private void setQueryParameters(HttpRequestBase method, List<NameValuePair> parameters) throws FilesException{			URI oldURI = method.getURI();			try {				URI newURI = URIUtils.createURI(oldURI.getScheme(), oldURI.getHost(), -1, 						URLEncoder.encode(oldURI.getPath(), "UTF-8"), URLEncodedUtils.format(parameters, "UTF-8"), null);				logger.warn("Old Path: " + oldURI.getPath());				logger.warn("New URI: " + newURI);				method.setURI(newURI);			}			catch (UnsupportedEncodingException uee) {				logger.error("Somehow, we don't have UTF-8, this is quite a surprise", uee);				throw new FilesException("Somehow, we don't have UTF-8, this is quite a surprise", uee);			}			catch (URISyntaxException use) {				logger.error("Bad Syntax", use);				throw new FilesException("Bad URL Syntax", use);			}		}		*/] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT>returns account url  return account name set account reassemble authentication url  param account log cloudfiles  method performs authentication sets client s internal state  return true login successful  false otherwise  throws ioexception   io error network communication  throws httpexception error http protocol log cloudfiles  method performs authentication sets client s internal state  throws ioexception   io error network communication  throws httpexception error http protocol list containers account  ordered container name  return null user logged account found  a list fscontainers containers account         containers account  list length  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list containers account  ordered container name  param limit maximum number containers return   1 returns unlimited number  return null user logged account found  a list fscontainers containers account         containers account  list length  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list containers account  ordered container name   param limit maximum number containers return   1 returns unlimited number   param marker return containers occur lexicographically   return null user logged account found  a list fscontainers containers account         containers account  list length  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list containers account  return null user logged account found  a list filescontainer containers account         containers account  list length  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list containers account  param limit maximum number containers return   1 denotes limit  return null user logged account found  a list filescontainer containers account         containers account  list length  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list containers account  param limit maximum number containers return   1 denotes limit  param marker return containers container  null denotes starting beginning  lexicographically   return a list filescontainer containers account         containers account  list length  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list objects a container starting string  param container  container name  param startswith string start  param path objects path  param limit return  code limit  code  objects  param marker returns objects lexicographically greater  code marker  code   conjunction  code limit  code  paginate list  return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list objects a container starting string  param container  container name  param startswith string start  param path objects path  param limit return  code limit  code  objects  param marker returns objects lexicographically greater  code marker  code   conjunction  code limit  code  paginate list  param delimter argument delimiter separates  directories   return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list objects a container lexicographic order  param container  container name  return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list objects a container lexicographic order  param container  container name  param delimter argument delimiter separates  directories   return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list objects a container lexicographic order  param container  container name  param limit return  code limit  code  objects  return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list objects a container lexicographic order  param container  container name  param path objects path  return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server list objects a container lexicographic order  param container  container name  param path objects path  param delimter argument delimiter separates  directories   return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server list objects a container lexicographic order  param container  container name  param path objects path  param limit return  code limit  code  objects  param marker returns objects lexicographically greater  code marker  code   conjunction  code limit  code  paginate list  return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid list objects a container lexicographic order  param container  container name  param path objects path  param limit return  code limit  code  objects  param marker returns objects lexicographically greater  code marker  code   conjunction  code limit  code  paginate list  return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server list objects a container lexicographic order  param container  container name  param limit return  code limit  code  objects  param marker returns objects lexicographically greater  code marker  code   conjunction  code limit  code  paginate list  return a list filesobjects starting string  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid convenience method test existence a container cloud files  param container  return true container exists  false otherwise  throws ioexception  throws ioexception   io error network communication  throws httpexception error http protocol information account  return filesaccountinfo information number containers number bytes         account  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error request server  throws filesauthorizationexception client s login invalid basic information a container  number items total size   param container container information  return containerinfo object container present null present  throws ioexception  a socket level exception talking cloudfiles  throws httpexception protocol level exception talking cloudfiles  throws filesnotfoundexception container found  throws filesauthorizationexception client logged log expired creates a container  param name name container created  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesauthorizationexception client property logged  throws filesinvalidnameexception container name invalid deletes a container  param name  name container  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesauthorizationexception user logged  throws filesinvalidnameexception   container name invalid  throws filesnotfoundexception      container exist  throws filescontainernotemptyexception container empty enables access files container content delivery network  param name name container enable  return cdn url container  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error talking cdn server          param referreracl unused      param useragentacl unused     current cdn sharing status container  param name name container enable  return information container  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error talking cloudfiles server  throws filesnotfoundexception container cdn enabled current cdn sharing status container  param name name container enable  return information container  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception error talking cloudfiles server  throws filesnotfoundexception container cdn enabled creates a path  but portions path   param container name container  param path  name path  throws httpexception error protocol layer talking cloudfiles  throws ioexception error socket layer talking cloudfiles  throws filesexception error taking cloudfiles server create path elements entire tree a path  thus   code createfullpath  mycontainer    foo bar baz    code  creates paths  foo    foo bar   foo bar baz   param container name container  param path full name path  throws httpexception error protocol layer talking cloudfiles  throws ioexception error socket layer talking cloudfiles  throws filesexception error taking cloudfiles server names containers account  param limit maximum number container names return  return a list container names  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception names containers account  return a list container names  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception names containers account  param limit maximum number container names return  param marker results  code marker  code  lexicographically  return a list container names  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception purges items a container cdn  param container name container  param emailaddresses optional comma separated list email addresses notified purge complete                        code null  code  desired  throws ioexception error talking cdn management server  throws httpexception error http  throws filesauthorizationexception log successful  account suspended  throws filesexception error purges items a container cdn  param container name container  param object name object  param emailaddresses optional comma separated list email addresses notified purge complete                        code null  code  desired  throws ioexception error talking cdn management server  throws httpexception error http  throws filesauthorizationexception log successful  account suspended  throws filesexception error list containers account  return a list containers  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception list containers account  param limit maximum number container names return  return a list containers  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception list containers account  param limit maximum number container names return  param marker names  code marker  code  lexicographically  return a list containers  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception create a manifest server  including metadata  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  param manifest    set manifest content  param callback    object callbacks  null callbacks   throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception create a manifest server  including metadata  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  param manifest    set manifest content  param metadata    a map metadata key names values metadata values  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception create a manifest server  including metadata  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  param manifest    set manifest content  param metadata    a map metadata key names values metadata values  param callback    object callbacks  null callbacks   throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception store a file server  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  return etag save successful  null  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception store a file server  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  return etag save successful  null  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception store a file server  including metadata  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  param metadata    a map metadata key names values metadata values  return etag save successful  null  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesauthorizationexception store a file server  including metadata  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  param metadata    a map metadata key names values metadata values  param metadata    callback object called data  return etag save successful  null  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception copies file cloud files  keeping original file name cloud files  param container    name container place file  param obj          file transfer  param contenttype  file s mime type  return etag save successful  null  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception store a file server  including metadata  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  param metadata    a map metadata key names values metadata values  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception store a file server  including metadata  param container   name container  param obj         file file copy  param contenttype mime type file  param name        name file server  param metadata    a map metadata key names values metadata values  param callback    object callbacks  null callbacks   throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception store a file server  including metadata  contents coming input stream  entire length content start write it  hold memory time  param container   name container  param data        object implements inputstream  param contenttype mime type file  param name        name file server  param metadata    a map metadata key names values metadata values  param callback    object callbacks  null callbacks   throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception  param container name container  param name name object  param entity name request entity  make set content type  param metadata metadata object  param md5sum 32 character hex encoded md5 sum data  return etag save successful  null  throws ioexception a socket level exception talking cloudfiles  throws httpexception a protocol level error talking cloudfiles  throws filesexception error talking cloudfiles method copies object found source container source object name destination container destination object name  param sourcecontainer object copy  param sourceobjname object copy  param destcontainer object copy copied  param destobjname object copy  return etag successful  null  throws ioexception a socket level error talking cloudfiles  throws httpexception a protocol level error talking cloudfiles  throws filesexception error talking cloudfiles delete object container  param container  container name  param objname    object name  return filesconstantsobject deleted  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesexception object s metadata  param container name container  param objname   name object  return object s metadata  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesauthorizationexception client s login invalid  throws filesinvalidnameexception container object name valid  throws filesnotfoundexception file found content object  param container  name container  param objname    name object  return content object  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesauthorizationexception  throws filesinvalidnameexception  throws filesnotfoundexception get s object s content a stream  param container  name container  param objname    name object  return input stream give objects content read from  throws ioexception   io error network communication  throws httpexception error http protocol  throws filesauthorizationexception  throws filesnotfoundexception container exist  throws filesinvalidnameexception utility function write inputstream a file  param  param  throws ioexception reads input stream a stream  param input stream  return contents stream stored a string  throws ioexception calculates md5 checksum a file  returned a hex encoded string  param file  return md5 checksum  a base 16 encoded string  throws ioexception calculates md5 checksum array data  param data data checksum  return checksum  represented a base 16 encoded string  throws ioexception encode unicode characters problems  param str  return string encoded a uri  return connection timeout communicating server  in milliseconds  timeout communicating server  in milliseconds   param connectiontimeout timeout connection  return storage url end rest api  return get s storage token  return get s storage token instance client authenticated itself   note  a call work  auth token timed out  re auth  return true logged in  false otherwise username logged with  return username set s username client note  setting login real impact  code login    code  method called again  param username username password client login  return password set s password client note  setting login real impact  code login    code  method called again  param password password url authentication  return url  represented a string  url authentication service  note  logged in  effect calls login again  param authenticationurl authentication url  return useetag  param useetag useetag set  return cdnmanagementurl  param config  param config  param config           private void setqueryparameters httprequestbase method  list namevaluepair  parameters  throws filesexception    uri olduri methodgeturi      try      uri newuri uriutilscreateuri oldurigetscheme    oldurigethost     1        urlencoderencode oldurigetpath     utf 8    urlencodedutilsformat parameters   utf 8    null      loggerwarn  old path  oldurigetpath        loggerwarn  new uri  newuri      methodseturi newuri         catch  unsupportedencodingexception uee       loggererror  somehow  utf 8  a surprise   uee      throw filesexception  somehow  utf 8  a surprise   uee         catch  urisyntaxexception use       loggererror  bad syntax   use      throw filesexception  bad url syntax   use               <CODESPLIT>150<CODESPLIT>true<CODESPLIT>GitHubUser<CODESPLIT>git hub user<CODESPLIT>git hub user<CODESPLIT>/** * A GitHub repository user. * * @author Willie Wheeler (willie.wheeler@gmail.com) */<CODESPLIT>a github repository user  author willie wheeler  williewheeler gmailcom <CODESPLIT>id; url; login; avatarUrl; gravatarId; name; email; date; <CODESPLIT> vazio id  url  login  avatarurl  gravatarid  name  email  date   <CODESPLIT> vazio id  url  login  avatarurl  gravatarid  name  email  date<CODESPLIT><VAZIO>[ getId ][ setId ][ getUrl ][ setUrl ][ getLogin ][ setLogin ][ getAvatarUrl ][ setAvatarUrl ][ getGravatarId ][ setGravatarId ][ getName ][ setName ][ getEmail ][ setEmail ][ getDate ][ setDate ]<CODESPLIT><vazio>[ get id ][ set id ][ get url ][ set url ][ get login ][ set login ][ get avatar url ][ set avatar url ][ get gravatar id ][ set gravatar id ][ get name ][ set name ][ get email ][ set email ][ get date ][ set date ] <CODESPLIT><vazio>[ id set id url set url login set login avatar url set avatar url gravatar id set gravatar id name set name email set email date set date <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [/** * @return watcher's GitHub login */] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT> return watcher s github login <CODESPLIT>151<CODESPLIT>true<CODESPLIT>GMailSender<CODESPLIT>gmail sender<CODESPLIT>gmail sender<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>mailhost = "auth-iitb.ac.in"; user = "your-ldap-id"; password = "your-ldap-passwd"; session; <CODESPLIT> vazio mailhost user password  session   <CODESPLIT> vazio mailhost user password  session<CODESPLIT><VAZIO>[ getPasswordAuthentication ][ sendMail ]<CODESPLIT><vazio>[ get password authentication ][ send mail ] <CODESPLIT><vazio>[ password authentication send mail <CODESPLIT>[<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>152<CODESPLIT>true<CODESPLIT>GraftClient<CODESPLIT>graft client<CODESPLIT>graft client<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>port; hostname; user; <CODESPLIT> vazio port  hostname  user   <CODESPLIT> vazio port  hostname  user<CODESPLIT><VAZIO>[ createNode ][ getNodeById ][ propagateNode ][ propagateEdge ][ propagateProperties ][ ping ][ sendMessage ][ setReplica ][ logIn ][ postComment ][ getNotifications ]<CODESPLIT><vazio>[ create node ][ get node by id ][ propagate node ][ propagate edge ][ propagate properties ][ ping ][ send message ][ set replica ][ log in ][ post comment ][ get notifications ] <CODESPLIT><vazio>[ create node node id propagate node propagate edge propagate properties ping send message set replica log post comment notifications <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>153<CODESPLIT>true<CODESPLIT>HumanPlayer<CODESPLIT>human player<CODESPLIT>human player<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ selectBuy ][ selectCard ][ selectCard ][ playRound ]<CODESPLIT><vazio>[ select buy ][ select card ][ select card ][ play round ] <CODESPLIT><vazio>[ select buy select card select card play round <CODESPLIT>[// Trying to get a grasp on the heirarchy calls] [// This should be the real used method] [<VAZIO>] [<VAZIO>] <CODESPLIT>    a grasp heirarchy calls      real method  <CODESPLIT>