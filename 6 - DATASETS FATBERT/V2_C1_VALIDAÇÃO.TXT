80<CODESPLIT>false<CODESPLIT>VisitableFile<CODESPLIT>visitable file<CODESPLIT>visitable file<CODESPLIT>/** * Class adding the support of the Visitor design pattern to files. * * @author Cedric Bosdonnat * * @see IVisitor for details on implementing a visitor * @see IVisitable for details on how to runs */<CODESPLIT>class adding support visitor design pattern files  author cedric bosdonnat  see ivisitor details implementing a visitor  see ivisitable details runs<CODESPLIT>serialVersionUID = 1447247005481569493L; <CODESPLIT> vazio serialversionuid   <CODESPLIT> vazio serialversionuid<CODESPLIT><VAZIO>[ accept ]<CODESPLIT><vazio>[ accept ] <CODESPLIT><vazio>[ accept <CODESPLIT>[/** * {@inheritDoc} */] <CODESPLIT>  inheritdoc  <CODESPLIT>81<CODESPLIT>false<CODESPLIT>VisitMap<CODESPLIT>visit map<CODESPLIT>visit map<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>heatPalette; cells; width; field; agent; lastPosition = null; neighborhoodSize; <CODESPLIT> vazio heatpalette  cells  width  field  agent lastposition  neighborhoodsize   <CODESPLIT> vazio heatpalette  cells  width  field  agent lastposition  neighborhoodsize<CODESPLIT><VAZIO>[ getHeatColor ][ getHeight ][ getWidth ][ clear ][ setFromHistory ][ getColor ][ getBaseTile ][ getBodyColor ][ getBodyOffsetX ][ getBodyOffsetY ][ getBodyTile ][ message ][ position ][ markNeighborhood ][ step ][ getAgent ]<CODESPLIT><vazio>[ get heat color ][ get height ][ get width ][ clear ][ set from history ][ get color ][ get base tile ][ get body color ][ get body offset x ][ get body offset y ][ get body tile ][ message ][ position ][ mark neighborhood ][ step ][ get agent ] <CODESPLIT><vazio>[ heat color height width clear set history color base tile body color body offset body offset body tile message position mark neighborhood step agent <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>82<CODESPLIT>false<CODESPLIT>Visual_Scene_sketchup7<CODESPLIT>visual_scene_sketchup7<CODESPLIT>visual_scene_sketchup7<CODESPLIT>/** *  <p>Lucerne University of Applied Sciences and Arts <a href="http://www.hslu.ch">http://www.hslu.ch</a></p> * *  <p>This source is free; you can redistribute it and/or modify it under *  the terms of the GNU General Public License and by nameing of the originally author</p> * * <p>this class does the same job as class 'Visual_Scene_sketchup8' for Sketchup version 7 but <u>is unused</u></p> * *  @author Markus Zimmermann <a href="http://www.die-seite.ch">http://www.die-seite.ch</a> *  @version 1.0 */<CODESPLIT>  p lucerne university applied sciences arts  a href  http   wwwhsluch  http   wwwhsluch  a   p    p this source free  redistribute and or modify  terms gnu general public license nameing originally author  p   p this class job class  visual scene sketchup8  sketchup version 7  u is unused  u   p    author markus zimmermann  a href  http   wwwdie seitech  http   wwwdie seitech  a    version 10<CODESPLIT>ID; <CODESPLIT> vazio id   <CODESPLIT> vazio id<CODESPLIT><VAZIO>[ getID ]<CODESPLIT><vazio>[ get id ] <CODESPLIT><vazio>[ id <CODESPLIT>[/** * @return the ID of this scene */] <CODESPLIT> return id scene <CODESPLIT>83<CODESPLIT>false<CODESPLIT>Visual_Scene_sketchup8<CODESPLIT>visual_scene_sketchup8<CODESPLIT>visual_scene_sketchup8<CODESPLIT>/** *  <p>Lucerne University of Applied Sciences and Arts <a href="http://www.hslu.ch">http://www.hslu.ch</a></p> * *  <p>This source is free; you can redistribute it and/or modify it under *  the terms of the GNU General Public License and by nameing of the originally author</p> * * <p> this class maps the Visual_Scene-tag and binds meterials to the geometries</p> * *  @author Markus Zimmermann <a href="http://www.die-seite.ch">http://www.die-seite.ch</a> *  @version 1.0 */<CODESPLIT>  p lucerne university applied sciences arts  a href  http   wwwhsluch  http   wwwhsluch  a   p    p this source free  redistribute and or modify  terms gnu general public license nameing originally author  p   p  class maps visual scene tag binds meterials geometries  p    author markus zimmermann  a href  http   wwwdie seitech  http   wwwdie seitech  a    version 10<CODESPLIT>ID; <CODESPLIT> vazio id   <CODESPLIT> vazio id<CODESPLIT><VAZIO>[ getID ]<CODESPLIT><vazio>[ get id ] <CODESPLIT><vazio>[ id <CODESPLIT>[/** * @return the ID of this scene */] <CODESPLIT> return id scene <CODESPLIT>84<CODESPLIT>false<CODESPLIT>Visualization<CODESPLIT>visualization<CODESPLIT>visualization<CODESPLIT>/** * Klasa mia?a s?u?y? do obs?ugi wizualizacji. Na dzie? obecny nie robi nic * @author Micha? Zimnicki */<CODESPLIT>klasa mia a s u y  obs ugi wizualizacji na dzie  obecny nie robi nic  author micha  zimnicki<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>85<CODESPLIT>false<CODESPLIT>Vm<CODESPLIT>vm<CODESPLIT>vm<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>handle = 0; error_code = 0; <CODESPLIT> vazio handle error code   <CODESPLIT> vazio handle error code<CODESPLIT><VAZIO>[ step ][ compile ][ stop ][ finalize ][ internal_init ]<CODESPLIT><vazio>[ step ][ compile ][ stop ][ finalize ][ internal_init ] <CODESPLIT><vazio>[ step compile stop finalize internal_init <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>86<CODESPLIT>false<CODESPLIT>Vocab<CODESPLIT>vocab<CODESPLIT>vocab<CODESPLIT>/** * Vocabulary definitions from http://vocab.org/relationship/.rdf * @author Auto-generated by schemagen on 19 Jul 2012 17:41 */<CODESPLIT>vocabulary definitions http   vocaborg relationship rdf  author auto generated schemagen 19 jul 2012 17 41<CODESPLIT>m_model = ModelFactory.createDefaultModel(); NS = "http://purl.org/vocab/relationship/"; NAMESPACE = m_model.createResource(NS); ambivalentOf = m_model.createProperty("http://purl.org/vocab/relationship/ambivalentOf"); antagonistOf = m_model.createProperty("http://purl.org/vocab/relationship/antagonistOf"); apprenticeTo = m_model.createProperty("http://purl.org/vocab/relationship/apprenticeTo"); childOf = m_model.createProperty("http://purl.org/vocab/relationship/childOf"); employedBy = m_model.createProperty("http://purl.org/vocab/relationship/employedBy"); employerOf = m_model.createProperty("http://purl.org/vocab/relationship/employerOf"); enemyOf = m_model.createProperty("http://purl.org/vocab/relationship/enemyOf"); grandchildOf = m_model.createProperty("http://purl.org/vocab/relationship/grandchildOf"); grandparentOf = m_model.createProperty("http://purl.org/vocab/relationship/grandparentOf"); influencedBy = m_model.createProperty("http://purl.org/vocab/relationship/influencedBy"); knowsByReputation = m_model.createProperty("http://purl.org/vocab/relationship/knowsByReputation"); knowsInPassing = m_model.createProperty("http://purl.org/vocab/relationship/knowsInPassing"); knowsOf = m_model.createProperty("http://purl.org/vocab/relationship/knowsOf"); mentorOf = m_model.createProperty("http://purl.org/vocab/relationship/mentorOf"); parentOf = m_model.createProperty("http://purl.org/vocab/relationship/parentOf"); participant = m_model.createProperty("http://purl.org/vocab/relationship/participant"); participantIn = m_model.createProperty("http://purl.org/vocab/relationship/participantIn"); wouldLikeToKnow = m_model.createProperty("http://purl.org/vocab/relationship/wouldLikeToKnow"); __ = m_model.createResource("http://purl.org/vocab/relationship/examples/1"); ___INSTANCE = m_model.createResource("http://purl.org/vocab/relationship/examples/2"); <CODESPLIT> vazio m model ns namespace ambivalentof antagonistof apprenticeto childof employedby employerof enemyof grandchildof grandparentof influencedby knowsbyreputation knowsinpassing knowsof mentorof parentof participant participantin wouldliketoknow       instance   <CODESPLIT> vazio model ns namespace ambivalentof antagonistof apprenticeto childof employedby employerof enemyof grandchildof grandparentof influencedby knowsbyreputation knowsinpassing knowsof mentorof parentof participant participantin wouldliketoknow       instance<CODESPLIT><VAZIO>[ getURI ]<CODESPLIT><vazio>[ get uri ] <CODESPLIT><vazio>[ uri <CODESPLIT>[/** * <p>The namespace of the vocabulary as a string</p> *  @see #NS */] <CODESPLIT> p the namespace vocabulary a string  p    see  ns <CODESPLIT>87<CODESPLIT>false<CODESPLIT>VoiceData<CODESPLIT>voice data<CODESPLIT>voice data<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ handleVoice ][ extractVoiceBits ][ packBits ][ convertByte ][ voiceDump ]<CODESPLIT><vazio>[ handle voice ][ extract voice bits ][ pack bits ][ convert byte ][ voice dump ] <CODESPLIT><vazio>[ handle voice extract voice bits pack bits convert byte voice dump <CODESPLIT>[// Handle incoming voice data] [// Get the voice data bits] [// Pack the bits into an int array] [// Get a single byte from the boolean array] [// A function to save voice data to enable debugging] <CODESPLIT>    handle incoming voice data      voice data bits      pack bits int array      a single byte boolean array      a function save voice data enable debugging  <CODESPLIT>88<CODESPLIT>false<CODESPLIT>VoltageControlFragment<CODESPLIT>voltage control fragment<CODESPLIT>voltage control fragment<CODESPLIT>/** * @author arif */<CODESPLIT> author arif<CODESPLIT>LOG_TAG = "NSTools.VoltageControlActivity"; maxArmVolt; maxIntVolt; armVoltages; intVoltages; preferences; <CODESPLIT> vazio log tag  maxarmvolt  maxintvolt  armvoltages  intvoltages  preferences   <CODESPLIT> vazio log tag  maxarmvolt  maxintvolt  armvoltages  intvoltages  preferences<CODESPLIT><VAZIO>[ onPreferenceAttached ][ showWarningDialog ][ createDefaultVoltPreference ][ readUvmvTable ][ readVoltages ][ saveVoltages ][ onPreferenceChange ]<CODESPLIT><vazio>[ on preference attached ][ show warning dialog ][ create default volt preference ][ read uvmv table ][ read voltages ][ save voltages ][ on preference change ] <CODESPLIT><vazio>[ preference attached show warning dialog create default volt preference read uvmv table read voltages save voltages preference change <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>89<CODESPLIT>false<CODESPLIT>VoltagePreference<CODESPLIT>voltage preference<CODESPLIT>voltage preference<CODESPLIT>/** * @author arif */<CODESPLIT> author arif<CODESPLIT>ignoreInterface = false; <CODESPLIT> vazio ignoreinterface   <CODESPLIT> vazio ignoreinterface<CODESPLIT><VAZIO>[ setIgnoreInterface ][ readPreloadValue ][ onSetInitialValue ][ writeValue ][ readValue ]<CODESPLIT><vazio>[ set ignore interface ][ read preload value ][ on set initial value ][ write value ][ read value ] <CODESPLIT><vazio>[ set ignore interface read preload set initial write read <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>90<CODESPLIT>false<CODESPLIT>VOMSSecurityContext<CODESPLIT>vomssecurity context<CODESPLIT>vomssecurity context<CODESPLIT>/** * A class representing an X.509 authentication context augmented with VOMS attributes. The context is stored in a {@link ThreadLocal}. * The validation and extraction of VOMS attributes is triggered by the {@link #setClientCertChain(X509Certificate[])} method. * * Attributes can then be accessed via the {@link #getFQANs()} method. When VOMS validation fails, no attributes are returned. * * @author andreaceccanti */<CODESPLIT>a class representing x509 authentication context augmented voms attributes context stored a   link threadlocal  validation extraction voms attributes triggered   link  setclientcertchain x509certificate     method attributes accessed   link  getfqans    method voms validation fails  attributes returned  author andreaceccanti<CODESPLIT>serialVersionUID = 1L; theSecurityContexts = new ThreadLocal<VOMSSecurityContext>(); validator; <CODESPLIT> vazio serialversionuid thesecuritycontexts  validator   <CODESPLIT> vazio serialversionuid thesecuritycontexts  validator<CODESPLIT><VAZIO>[ setClientCertChain ][ getCurrentContext ][ setCurrentContext ][ clearCurrentContext ][ getValidator ][ setValidator ][ getFQANs ]<CODESPLIT><vazio>[ set client cert chain ][ get current context ][ set current context ][ clear current context ][ get validator ][ set validator ][ get fqans ] <CODESPLIT><vazio>[ set client cert chain current context set current context clear current context validator set validator fqans <CODESPLIT>[<VAZIO>] [/** * Returns the {@link VOMSSecurityContext} associated to the current thread * * @return the {@link VOMSSecurityContext} associated to the current thread */] [/** * Sets the {@link VOMSSecurityContext} associated to the current thread * * @param ctxt the {@link VOMSSecurityContext} that will be associated to the current thread */] [/** * Clears the {@link VOMSSecurityContext} associated to the current thread */] [/** * Returns the {@link VOMSValidator} used to validate VOMS attributes extracted from client certificate chains * * @return the VOMS validator used to validate VOMS attributes */] [/** * Sets the {@link VOMSValidator} used to validate VOMS attributes extracted from client certificate chains * * @param validator the VOMS validator that will be used to validate VOMS attributes */] [<VAZIO>] <CODESPLIT>returns   link vomssecuritycontext  current thread  return   link vomssecuritycontext  current thread sets   link vomssecuritycontext  current thread  param ctxt   link vomssecuritycontext  current thread clears   link vomssecuritycontext  current thread returns   link vomsvalidator  validate voms attributes extracted client certificate chains  return voms validator validate voms attributes sets   link vomsvalidator  validate voms attributes extracted client certificate chains  param validator voms validator validate voms attributes <CODESPLIT>91<CODESPLIT>false<CODESPLIT>VOMSSecurityContextHandler<CODESPLIT>vomssecurity context handler<CODESPLIT>vomssecurity context handler<CODESPLIT>/** * A Jetty Handler that initializes a {@link VOMSSecurityContext} and logs a message about * the authenticated connection. * * It should be included in front of other handlers to initialize the security context so that handlers * down the line can process the X.509 and VOMS attributes and leverage the information to take * authorization decisions. * * @author andreaceccanti */<CODESPLIT>a jetty handler initializes a   link vomssecuritycontext  logs a message authenticated connection included front handlers initialize security context handlers line process x509 voms attributes leverage information authorization decisions  author andreaceccanti<CODESPLIT>log = LoggerFactory.getLogger(VOMSSecurityContextHandler.class); <CODESPLIT> vazio log   <CODESPLIT> vazio log<CODESPLIT><VAZIO>[ handle ]<CODESPLIT><vazio>[ handle ] <CODESPLIT><vazio>[ handle <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>92<CODESPLIT>false<CODESPLIT>VOMSSecurityInfo<CODESPLIT>vomssecurity info<CODESPLIT>vomssecurity info<CODESPLIT>/** * An interface providing access to VOMS attributes. * * @author andreaceccanti */<CODESPLIT>interface providing access voms attributes  author andreaceccanti<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ getFQANs ]<CODESPLIT><vazio>[ get fqans ] <CODESPLIT><vazio>[ fqans <CODESPLIT>[/** * Returns an array of string representation of valid VOMS Fully Qualified Attribute Names. * * @return a possibly empty array of VOMS FQANs */] <CODESPLIT>returns array string representation valid voms fully qualified attribute names  return a possibly empty array voms fqans <CODESPLIT>93<CODESPLIT>false<CODESPLIT>VorlesungsDetailPanel<CODESPLIT>vorlesungs detail panel<CODESPLIT>vorlesungs detail panel<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>id; select; p; anOabBtn; beschreibungsFeld; detailLabel; jScrollPane1; lehrenderLabel; pruefenderLabel; timeLabel; titelLabel; <CODESPLIT> vazio id  select  p  anoabbtn  beschreibungsfeld  detaillabel  jscrollpane1  lehrenderlabel  pruefenderlabel  timelabel  titellabel   <CODESPLIT> vazio id  select   anoabbtn  beschreibungsfeld  detaillabel  jscrollpane1  lehrenderlabel  pruefenderlabel  timelabel  titellabel<CODESPLIT><VAZIO>[ initComponents ][ anOabBtnActionPerformed ][ setPanelData ]<CODESPLIT><vazio>[ init components ][ an oab btn action performed ][ set panel data ] <CODESPLIT><vazio>[ init components oab btn action performed set panel data <CODESPLIT>[/** * initComponents() Initialisiert die Komponenten. */] [/** * anOabBtnActionPerformed(ActionEvent) * @param evt */] [/** * setPanelData(HashMap) * @param data */] <CODESPLIT>initcomponents   initialisiert die komponenten anoabbtnactionperformed actionevent   param evt setpaneldata hashmap   param data <CODESPLIT>94<CODESPLIT>false<CODESPLIT>VoteCommand<CODESPLIT>vote command<CODESPLIT>vote command<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>voteUrl = "http://minestatus.net/26507-xboxcraft/vote"; <CODESPLIT> vazio voteurl   <CODESPLIT> vazio voteurl<CODESPLIT><VAZIO>[ onCommand ]<CODESPLIT><vazio>[ on command ] <CODESPLIT><vazio>[ command <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>95<CODESPLIT>false<CODESPLIT>VotingTask<CODESPLIT>voting task<CODESPLIT>voting task<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>GOOD_RESPONSE = "{}"; baseUrl; redditPost; sessionManager; context; isUpvote; <CODESPLIT> vazio good response  baseurl  redditpost  sessionmanager  context  isupvote   <CODESPLIT> vazio good response  baseurl  redditpost  sessionmanager  context  isupvote<CODESPLIT><VAZIO>[ doInBackground ][ onPostExecute ]<CODESPLIT><vazio>[ do in background ][ on post execute ] <CODESPLIT><vazio>[ background post execute <CODESPLIT>[<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>96<CODESPLIT>false<CODESPLIT>Voxmail<CODESPLIT>voxmail<CODESPLIT>voxmail<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>voxmailDao = null; voxmailService = null; vmsm = null; voxmail = null; props = null; basePath = null; <CODESPLIT> vazio voxmaildao voxmailservice vmsm voxmail props basepath   <CODESPLIT> vazio voxmaildao voxmailservice vmsm voxmail props basepath<CODESPLIT><VAZIO>[ getInstance ][ getVoxmailDAO ][ getVoxmailService ][ commit ][ rollback ][ update ][ saveObject ][ releaseSession ][ getProps ][ init ][ destroy ][ setBasePath ][ getBasePath ]<CODESPLIT><vazio>[ get instance ][ get voxmail dao ][ get voxmail service ][ commit ][ rollback ][ update ][ save object ][ release session ][ get props ][ init ][ destroy ][ set base path ][ get base path ] <CODESPLIT><vazio>[ instance voxmail dao voxmail service commit rollback update save object release session props init destroy set base path base path <CODESPLIT>[<VAZIO>] [/** * @return DAO for Voxmail DAO */] [/** * @return DAO for Voxmail Service */] [/** * Saves any changes made to the Voxmail model objects to the database.  Should be called * whenever the transaction is complete.  This is normally done in the services (Business * Delegates), and generally should not be done in the Action classes or the DAO classes. * @throws VoxmailException */] [/** * This will cancel any changes made to the Voxmail model.  At this point all references to * any Voxmail objects should be thrown away, and re-grabbed by going to a Service or DAO. * @throws VoxmailException */] [/** * @throws VoxmailException */] [/** * Saves an individual object.  This should not be commonly used, but only used when you * want to do a partial transaction.  Normally Voxmail.commit() will save all the model * changes. * @param object * @throws VoxmailException */] [/** * This will clean up any thread context state, this should be called when the thread is done * doing Voxmail model work (for a web container this could be done in a filter before the * thread is returned to the thread pool.) * @throws VoxmailException */] [/** * @return Returns the Properties from bluesky.properties file. */] [/** * Initializes the Voxmail application, should be called when the application is instantiated. * @throws Voxmail Exception */] [/** * Cleans up the Voxmail application, should be called when application context is destroyed. * @throws VoxmailException */] [<VAZIO>] [<VAZIO>] <CODESPLIT> return dao voxmail dao  return dao voxmail service saves made voxmail model objects database  called transaction complete  services  business delegates   generally action classes dao classes  throws voxmailexception cancel made voxmail model  point references voxmail objects thrown away  re grabbed a service dao  throws voxmailexception  throws voxmailexception saves individual object  commonly used  a partial transaction  voxmailcommit   save model changes  param object  throws voxmailexception clean thread context state  called thread voxmail model work  for a web container a filter thread returned thread pool   throws voxmailexception  return returns properties blueskyproperties file initializes voxmail application  called application instantiated  throws voxmail exception cleans voxmail application  called application context destroyed  throws voxmailexception <CODESPLIT>97<CODESPLIT>false<CODESPLIT>VoxmailAction<CODESPLIT>voxmail action<CODESPLIT>voxmail action<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>df = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT); <CODESPLIT> vazio df   <CODESPLIT> vazio df<CODESPLIT><VAZIO>[ execute ]<CODESPLIT><vazio>[ execute ] <CODESPLIT><vazio>[ execute <CODESPLIT>[/** * Method execute * @param mapping * @param form * @param request * @param response * @return ActionForward */] <CODESPLIT>method execute  param mapping  param form  param request  param response  return actionforward <CODESPLIT>98<CODESPLIT>false<CODESPLIT>VoxmailDAO<CODESPLIT>voxmail dao<CODESPLIT>voxmail dao<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ createMailbox ][ updateMailbox ][ getMailboxByContactId ][ getMailboxByPhoneNumber ][ getMailboxByMailboxId ]<CODESPLIT><vazio>[ create mailbox ][ update mailbox ][ get mailbox by contact id ][ get mailbox by phone number ][ get mailbox by mailbox id ] <CODESPLIT><vazio>[ create mailbox update mailbox mailbox contact id mailbox phone number mailbox mailbox id <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>99<CODESPLIT>false<CODESPLIT>VoxmailException<CODESPLIT>voxmail exception<CODESPLIT>voxmail exception<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>serialVersionUID = 1L; <CODESPLIT> vazio serialversionuid   <CODESPLIT> vazio serialversionuid<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>100<CODESPLIT>false<CODESPLIT>VoxmailHibernateManagement<CODESPLIT>voxmail hibernate management<CODESPLIT>voxmail hibernate management<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ init ][ doFilter ][ destroy ]<CODESPLIT><vazio>[ init ][ do filter ][ destroy ] <CODESPLIT><vazio>[ init filter destroy <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>101<CODESPLIT>false<CODESPLIT>VoxmailService<CODESPLIT>voxmail service<CODESPLIT>voxmail service<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ updateOptions ][ updateMailbox ][ createMailbox ][ updateGreeting ][ retrieveMailbox ][ retrieveMailboxByContactId ][ retrieveMailboxByPhoneNumber ][ login ]<CODESPLIT><vazio>[ update options ][ update mailbox ][ create mailbox ][ update greeting ][ retrieve mailbox ][ retrieve mailbox by contact id ][ retrieve mailbox by phone number ][ login ] <CODESPLIT><vazio>[ update options update mailbox create mailbox update greeting retrieve mailbox retrieve mailbox contact id retrieve mailbox phone number login <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>102<CODESPLIT>false<CODESPLIT>VoxmailSessionManagement<CODESPLIT>voxmail session management<CODESPLIT>voxmail session management<CODESPLIT>/** * @author shawn * Follows open Session in View Pattern http://www.hibernate.org/43.html */<CODESPLIT> author shawn open session view pattern http   wwwhibernateorg 43html<CODESPLIT>log = LogFactory.getLog(VoxmailSessionManagement.class); sessions = null; session = new ThreadLocal(); transaction = new ThreadLocal(); serviceCache = new ThreadLocal(); <CODESPLIT> vazio log sessions session transaction servicecache   <CODESPLIT> vazio log sessions session transaction servicecache<CODESPLIT><VAZIO>[ getSessionFactory ][ init ][ destroy ][ getSession ][ getExternalSession ][ getTransaction ][ getServiceCache ][ update ][ saveObject ][ commit ][ rollback ][ releaseSession ][ isSessionActive ][ isTransactionActive ][ isServiceCacheActive ]<CODESPLIT><vazio>[ get session factory ][ init ][ destroy ][ get session ][ get external session ][ get transaction ][ get service cache ][ update ][ save object ][ commit ][ rollback ][ release session ][ is session active ][ is transaction active ][ is service cache active ] <CODESPLIT><vazio>[ session factory init destroy session external session transaction service cache update save object commit rollback release session session active transaction active service cache active <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>103<CODESPLIT>false<CODESPLIT>Voyage<CODESPLIT>voyage<CODESPLIT>voyage<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>time; <CODESPLIT> vazio time   <CODESPLIT> vazio time<CODESPLIT><VAZIO>[ getPath ][ setInstance ][ getInstance ][ size ][ addInstance ][ getTimes ][ getTimeAt ][ getFormat ][ getVoyage ][ getLast ][ isEmpty ][ toString ]<CODESPLIT><vazio>[ get path ][ set instance ][ get instance ][ size ][ add instance ][ get times ][ get time at ][ get format ][ get voyage ][ get last ][ is empty ][ to string ] <CODESPLIT><vazio>[ path set instance instance size add instance times time format voyage last empty string <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>104<CODESPLIT>false<CODESPLIT>VServerPush<CODESPLIT>vserver push<CODESPLIT>vserver push<CODESPLIT>/** * Vaadin client widget class for ServerPush that listens for broadcasts */<CODESPLIT>vaadin client widget class serverpush listens broadcasts<CODESPLIT>CONTEXT_PATH = "contextPath"; COMET = "comet"; CLASSNAME = "v-" + COMET; paintableId; client; atmosphereClient; contextPath; <CODESPLIT> vazio context path comet classname  paintableid  client  atmosphereclient  contextpath   <CODESPLIT> vazio context path comet classname  paintableid  client  atmosphereclient  contextpath<CODESPLIT><VAZIO>[ updateFromUIDL ][ update ][ onConnected ][ onBeforeDisconnected ][ onDisconnected ][ onError ][ onHeartbeat ][ onRefresh ][ onMessage ][ onDetach ]<CODESPLIT><vazio>[ update from uidl ][ update ][ on connected ][ on before disconnected ][ on disconnected ][ on error ][ on heartbeat ][ on refresh ][ on message ][ on detach ] <CODESPLIT><vazio>[ update uidl update connected disconnected disconnected error heartbeat refresh message detach <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>105<CODESPLIT>false<CODESPLIT>vSpout<CODESPLIT>v spout<CODESPLIT>spout<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>playerScreens = new HashMap<SpoutPlayer, CustomizationScreen>(); spoutPlayerData = new HashMap<SpoutPlayer, SpoutPlayerData>(); <CODESPLIT> vazio playerscreens spoutplayerdata   <CODESPLIT> vazio playerscreens spoutplayerdata<CODESPLIT><VAZIO>[ createSpoutPlayerData ]<CODESPLIT><vazio>[ create spout player data ] <CODESPLIT><vazio>[ create spout player data <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>106<CODESPLIT>false<CODESPLIT>W32API<CODESPLIT>w32api<CODESPLIT>w32api<CODESPLIT>/** * Base type for most W32 API libraries.  Provides standard options * for unicode/ASCII mappings.  Set the system property <code>w32.ascii</code> * to <code>true</code> to default to the ASCII mappings. */<CODESPLIT>base type w32 api libraries  standard options unicode ascii mappings  set system property  code w32ascii  code   code true  code  default ascii mappings<CODESPLIT>UNICODE_OPTIONS = new HashMap<String, Object>() {    {        put(OPTION_TYPE_MAPPER, W32APITypeMapper.UNICODE);        put(OPTION_FUNCTION_MAPPER, W32APIFunctionMapper.UNICODE);    }}; ASCII_OPTIONS = new HashMap<String, Object>() {    {        put(OPTION_TYPE_MAPPER, W32APITypeMapper.ASCII);        put(OPTION_FUNCTION_MAPPER, W32APIFunctionMapper.ASCII);    }}; DEFAULT_OPTIONS = Boolean.getBoolean("w32.ascii") ? ASCII_OPTIONS : UNICODE_OPTIONS; isUnicode = DEFAULT_OPTIONS.equals(UNICODE_OPTIONS); INVALID_HANDLE_VALUE = new HANDLE(Pointer.createConstant(0xffffffffL)); HWND_BROADCAST = new HWND(Pointer.createConstant(0xFFFF)); <CODESPLIT> vazio unicode options         put option function mapper  w32apifunctionmapper unicode         ascii options         put option function mapper  w32apifunctionmapper ascii         default options isunicode invalid handle value hwnd broadcast   <CODESPLIT> vazio unicode options         put option function mapper  w32apifunctionmapper unicode         ascii options         put option function mapper  w32apifunctionmapper ascii         default options isunicode invalid handle hwnd broadcast<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>107<CODESPLIT>false<CODESPLIT>W32APITests<CODESPLIT>w32apitests<CODESPLIT>w32apitests<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ handleShouldBeInvalid ]<CODESPLIT><vazio>[ handle should be invalid ] <CODESPLIT><vazio>[ handle invalid <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>108<CODESPLIT>false<CODESPLIT>W32Errors<CODESPLIT>w32errors<CODESPLIT>w32errors<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>NO_ERROR = 0; ERROR_INVALID_FUNCTION = 1; ERROR_FILE_NOT_FOUND = 2; ERROR_PATH_NOT_FOUND = 3; <CODESPLIT> vazio no error error invalid function error file not found error path not found   <CODESPLIT> vazio error error invalid function error file found error path found<CODESPLIT><VAZIO><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>109<CODESPLIT>false<CODESPLIT>WaarpCounter32<CODESPLIT>waarp counter32<CODESPLIT>waarp counter32<CODESPLIT>/** * Generic Counter32 with update possibility for GoldenGate * * @author Frederic Bregier */<CODESPLIT>generic counter32 update possibility goldengate  author frederic bregier<CODESPLIT><VAZIO><CODESPLIT> vazio  vazio  <CODESPLIT> vazio  vazio<CODESPLIT><VAZIO>[ setInternalValue ][ setInternalValue ][ getValue ][ clone ][ isDynamic ]<CODESPLIT><vazio>[ set internal value ][ set internal value ][ get value ][ clone ][ is dynamic ] <CODESPLIT><vazio>[ set internal set internal clone dynamic <CODESPLIT>[/** * Function to set the data before it is accessed by SNMP4J. This function * MUST call setValue(long) */] [/** * Function to set the data before it is accessed by SNMP4J. This function * MUST call setValue(long) */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.UnsignedInteger32#getValue()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.Gauge32#clone()     */] [/*     * (non-Javadoc)     *      * @see org.snmp4j.smi.AbstractVariable#isDynamic()     */] <CODESPLIT>function set data accessed snmp4j function call setvalue long  function set data accessed snmp4j function call setvalue long           non javadoc            see orgsnmp4jsmiunsignedinteger32 getvalue                non javadoc            see orgsnmp4jsmigauge32 clone                non javadoc            see orgsnmp4jsmiabstractvariable isdynamic       <CODESPLIT>110<CODESPLIT>true<CODESPLIT>ClientDto<CODESPLIT>client dto<CODESPLIT>client dto<CODESPLIT>/** * DTO sent to/from server. */<CODESPLIT>dto to from server<CODESPLIT>id; name; <CODESPLIT> vazio id  name   <CODESPLIT> vazio id  name<CODESPLIT><VAZIO>[ toModel ]<CODESPLIT><vazio>[ to model ] <CODESPLIT><vazio>[ model <CODESPLIT>[<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>111<CODESPLIT>true<CODESPLIT>Cliente<CODESPLIT>cliente<CODESPLIT>cliente<CODESPLIT>/** * @author edgar */<CODESPLIT> author edgar<CODESPLIT>serialVersionUID = 1L; id; nombre; apellido; cedula; telefono; prestamos; <CODESPLIT> vazio serialversionuid  id  nombre  apellido  cedula  telefono  prestamos   <CODESPLIT> vazio serialversionuid  id  nombre  apellido  cedula  telefono  prestamos<CODESPLIT><VAZIO>[ getPrestamos ][ setPrestamos ][ getApellido ][ setApellido ][ getCedula ][ setCedula ][ getNombre ][ setNombre ][ getTelefono ][ setTelefono ][ getId ][ setId ][ hashCode ][ equals ][ toString ]<CODESPLIT><vazio>[ get prestamos ][ set prestamos ][ get apellido ][ set apellido ][ get cedula ][ set cedula ][ get nombre ][ set nombre ][ get telefono ][ set telefono ][ get id ][ set id ][ hash code ][ equals ][ to string ] <CODESPLIT><vazio>[ prestamos set prestamos apellido set apellido cedula set cedula nombre set nombre telefono set telefono id set id hash code equals string <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>112<CODESPLIT>true<CODESPLIT>Contact<CODESPLIT>contact<CODESPLIT>contact<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>guid; username; title; psm; status; <CODESPLIT> vazio guid  username  title  psm  status   <CODESPLIT> vazio guid  username  title  psm  status<CODESPLIT><VAZIO>[ getGuid ][ getUsername ][ getTitle ][ getPSM ][ getStatus ][ setTitle ][ setPSM ][ setStatus ][ toString ]<CODESPLIT><vazio>[ get guid ][ get username ][ get title ][ get psm ][ get status ][ set title ][ set psm ][ set status ][ to string ] <CODESPLIT><vazio>[ guid username title psm status set title set psm set status string <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [/* Possible combination     * <STATUS>USERNAME     * <STATUS>USERNAME - PSM     * <STATUS>TITLE     * <STATUS>TITLE - PSM     */] <CODESPLIT>    combination      status username      status username psm      status title      status title psm     <CODESPLIT>113<CODESPLIT>true<CODESPLIT>Contact<CODESPLIT>contact<CODESPLIT>contact<CODESPLIT>/** * @author marcbaechinger */<CODESPLIT> author marcbaechinger<CODESPLIT>id; name; <CODESPLIT> vazio id  name   <CODESPLIT> vazio id  name<CODESPLIT><VAZIO>[ getName ][ setName ][ getId ][ setId ]<CODESPLIT><vazio>[ get name ][ set name ][ get id ][ set id ] <CODESPLIT><vazio>[ name set name id set id <CODESPLIT>[/** * Get the value of name * * @return the value of name */] [/** * Set the value of name * * @param name new value of name */] [/** * Get the value of id * * @return the value of id */] [/** * Set the value of id * * @param id new value of id */] <CODESPLIT>name  return name set name  param name name id  return id set id  param id id <CODESPLIT>114<CODESPLIT>true<CODESPLIT>Contact<CODESPLIT>contact<CODESPLIT>contact<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>serialVersionUID = 1L; contactID = 0; firstName = null; lastName = null; phoneNumber = null; email = null; mailURL = null; pin = null; <CODESPLIT> vazio serialversionuid contactid firstname lastname phonenumber email mailurl pin   <CODESPLIT> vazio serialversionuid contactid firstname lastname phonenumber email mailurl pin<CODESPLIT><VAZIO>[ getContactID ][ getFirstName ][ getLastName ][ getPhoneNumber ][ getEmail ][ getMailURL ][ setContactID ][ setFirstName ][ setLastName ][ setPhoneNumber ][ setEmail ][ setMailURL ][ getPin ][ setPin ]<CODESPLIT><vazio>[ get contact id ][ get first name ][ get last name ][ get phone number ][ get email ][ get mail url ][ set contact id ][ set first name ][ set last name ][ set phone number ][ set email ][ set mail url ][ get pin ][ set pin ] <CODESPLIT><vazio>[ contact id first name last name phone number email mail url set contact id set first name set last name set phone number set email set mail url pin set pin <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>115<CODESPLIT>true<CODESPLIT>Contact<CODESPLIT>contact<CODESPLIT>contact<CODESPLIT><VAZIO><CODESPLIT><VAZIO><CODESPLIT>user; nick; lists; groups; <CODESPLIT> vazio user  nick  lists  groups   <CODESPLIT> vazio user  nick  lists  groups<CODESPLIT><VAZIO>[ getUser ][ setUser ][ getNick ][ setNick ][ getLists ][ setLists ][ getGroups ][ setGroups ]<CODESPLIT><vazio>[ get user ][ set user ][ get nick ][ set nick ][ get lists ][ set lists ][ get groups ][ set groups ] <CODESPLIT><vazio>[ user set user nick set nick lists set lists groups set groups <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>116<CODESPLIT>true<CODESPLIT>Customer<CODESPLIT>customer<CODESPLIT>customer<CODESPLIT>/** * Simple customer entity * * @author Christian Sadilek <csadilek@redhat.com> */<CODESPLIT>simple customer entity  author christian sadilek  csadilek redhatcom <CODESPLIT>serialVersionUID = 1L; id; firstName; lastName; postalCode; lastChanged; <CODESPLIT> vazio serialversionuid  id  firstname  lastname  postalcode  lastchanged   <CODESPLIT> vazio serialversionuid  id  firstname  lastname  postalcode  lastchanged<CODESPLIT><VAZIO>[ getId ][ setId ][ getFirstName ][ setFirstName ][ getLastName ][ setLastName ][ getLastChanged ][ setLastChanged ][ getPostalCode ][ setPostalCode ][ toString ][ compareTo ]<CODESPLIT><vazio>[ get id ][ set id ][ get first name ][ set first name ][ get last name ][ set last name ][ get last changed ][ set last changed ][ get postal code ][ set postal code ][ to string ][ compare to ] <CODESPLIT><vazio>[ id set id first name set first name last name set last name last changed set last changed postal code set postal code string compare <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>117<CODESPLIT>true<CODESPLIT>Driver<CODESPLIT>driver<CODESPLIT>driver<CODESPLIT>/** * A Formula 1 driver. */<CODESPLIT>a formula 1 driver<CODESPLIT>forename; lastName; skillLevel; teamName; points; <CODESPLIT> vazio forename  lastname  skilllevel  teamname  points   <CODESPLIT> vazio forename  lastname  skilllevel  teamname  points<CODESPLIT><VAZIO>[ getForename ][ getLastName ][ getTeamName ][ getSkillLevel ][ getPoints ][ addPoints ][ toString ][ copy ]<CODESPLIT><vazio>[ get forename ][ get last name ][ get team name ][ get skill level ][ get points ][ add points ][ to string ][ copy ] <CODESPLIT><vazio>[ forename last name team name skill level points add points string copy <CODESPLIT>[<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] [<VAZIO>] <CODESPLIT><VAZIO><CODESPLIT>